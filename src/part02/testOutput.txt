Class in Test: Utils

	Feature: concat 2 String[] arrays

		Scenario: 2 normal arrays
		Given: array 1 is ["This", "is", "a"]
		And: array 2 is ["test", "string"]
		When: toString is called
		Then: result is ["This", "is", "a", "test", "string"]
		Passed: true
		Expected Value: ["This", "is", "a", "test", "string"]
		Given Value: ["This", "is", "a", "test", "string"]


		Scenario: empty array to normal array
		Given: array 1 is ["This", "is", "a"]
		And: array 2 is []
		When: toString is called
		Then: result is ["This", "is", "a"]
		Passed: true
		Expected Value: ["This", "is", "a"]
		Given Value: ["This", "is", "a"]


		Scenario: null array to normal array
		Given: array 1 is ["This", "is", "a"]
		And: array 2 is [null, null, null]
		When: toString is called
		Then: result is ["This", "is", "a", null, null, null]
		Passed: true
		Expected Value: ["This", "is", "a", null, null, null]
		Given Value: ["This", "is", "a", null, null, null]


		Scenario: string and null array to normal array
		Given: array 1 is ["This", "is", "a"]
		And: array 2 is [null, "test", null, "string", null]
		When: toString is called
		Then: result is ["This", "is", "a", null, "test", null, "string", null]
		Passed: true
		Expected Value: ["This", "is", "a", null, "test", null, "string", null]
		Given Value: ["This", "is", "a", null, "test", null, "string", null]


		Scenario: null to normal array
		Given: array 1 is ["This", "is", "a"]
		And: array 2 is null
		When: toString is called
		Then: result is ["This", "is", "a"]
		Passed: true
		Expected Value: ["This", "is", "a"]
		Given Value: ["This", "is", "a"]


		Scenario: normal array to empty array
		Given: array 1 is []
		And: array 2 is ["test", "string"]
		When: toString is called
		Then: result is ["test", "string"]
		Passed: true
		Expected Value: ["test", "string"]
		Given Value: ["test", "string"]


		Scenario: 2 empty arrays
		Given: array 1 is []
		And: array 2 is []
		When: toString is called
		Then: result is []
		Passed: true
		Expected Value: []
		Given Value: []


		Scenario: null array to empty array
		Given: array 1 is []
		And: array 2 is [null, null, null]
		When: toString is called
		Then: result is [null, null, null]
		Passed: true
		Expected Value: [null, null, null]
		Given Value: [null, null, null]


		Scenario: null and string array to empty array
		Given: array 1 is []
		And: array 2 is [null, "test", null, "string", null]
		When: toString is called
		Then: result is [null, "test", null, "string", null]
		Passed: true
		Expected Value: [null, "test", null, "string", null]
		Given Value: [null, "test", null, "string", null]


		Scenario: null to empty array
		Given: array 1 is []
		And: array 2 is null
		When: toString is called
		Then: result is []
		Passed: true
		Expected Value: []
		Given Value: []


		Scenario: normal array to null array
		Given: array 1 is [null, null, null]
		And: array 2 is ["test", "string"]
		When: toString is called
		Then: result is [null, null, null, "test", "string"]
		Passed: true
		Expected Value: [null, null, null, "test", "string"]
		Given Value: [null, null, null, "test", "string"]


		Scenario: empty array to null array
		Given: array 1 is [null, null, null]
		And: array 2 is []
		When: toString is called
		Then: result is [null, null, null]
		Passed: true
		Expected Value: [null, null, null]
		Given Value: [null, null, null]


		Scenario: 2 null arrays
		Given: array 1 is [null, null, null]
		And: array 2 is [null, null, null]
		When: toString is called
		Then: result is [null, null, null, null, null, null]
		Passed: true
		Expected Value: [null, null, null, null, null, null]
		Given Value: [null, null, null, null, null, null]


		Scenario: null and string array to null array
		Given: array 1 is [null, null, null]
		And: array 2 is [null, "test", null, "string", null]
		When: toString is called
		Then: result is [null, null, null, null, "test", null, "string", null]
		Passed: true
		Expected Value: [null, null, null, null, "test", null, "string", null]
		Given Value: [null, null, null, null, "test", null, "string", null]


		Scenario: null to null array
		Given: array 1 is [null, null, null]
		And: array 2 is null
		When: toString is called
		Then: result is [null, null, null]
		Passed: true
		Expected Value: [null, null, null]
		Given Value: [null, null, null]


		Scenario: normal array to null and string array
		Given: array 1 is [null, "test", null, "string", null]
		And: array 2 is ["test", "string"]
		When: toString is called
		Then: result is [null, "test", null, "string", null, "test", "string"]
		Passed: true
		Expected Value: [null, "test", null, "string", null, "test", "string"]
		Given Value: [null, "test", null, "string", null, "test", "string"]


		Scenario: empty array to null and string array
		Given: array 1 is [null, "test", null, "string", null]
		And: array 2 is []
		When: toString is called
		Then: result is [null, "test", null, "string", null]
		Passed: true
		Expected Value: [null, "test", null, "string", null]
		Given Value: [null, "test", null, "string", null]


		Scenario: null array to null and string array
		Given: array 1 is [null, "test", null, "string", null]
		And: array 2 is [null, null, null]
		When: toString is called
		Then: result is [null, "test", null, "string", null, null, null, null]
		Passed: true
		Expected Value: [null, "test", null, "string", null, null, null, null]
		Given Value: [null, "test", null, "string", null, null, null, null]


		Scenario: 2 null and string arrays
		Given: array 1 is [null, "test", null, "string", null]
		And: array 2 is [null, "test", null, "string", null]
		When: toString is called
		Then: result is [null, "test", null, "string", null, null, "test", null, "string", null]
		Passed: true
		Expected Value: [null, "test", null, "string", null, null, "test", null, "string", null]
		Given Value: [null, "test", null, "string", null, null, "test", null, "string", null]


		Scenario: null to null and string array
		Given: array 1 is [null, "test", null, "string", null]
		And: array 2 is null
		When: toString is called
		Then: result is [null, "test", null, "string", null]
		Passed: true
		Expected Value: [null, "test", null, "string", null]
		Given Value: [null, "test", null, "string", null]


		Scenario: normal array to null
		Given: array 1 is null
		And: array 2 is ["test", "string"]
		When: toString is called
		Then: result is ["test", "string"]
		Passed: true
		Expected Value: ["test", "string"]
		Given Value: ["test", "string"]


		Scenario: empty array to null
		Given: array 1 is null
		And: array 2 is []
		When: toString is called
		Then: result is []
		Passed: true
		Expected Value: []
		Given Value: []


		Scenario: null array to null
		Given: array 1 is null
		And: array 2 is [null, null, null]
		When: toString is called
		Then: result is [null, null, null]
		Passed: true
		Expected Value: [null, null, null]
		Given Value: [null, null, null]


		Scenario: null and string array to null
		Given: array 1 is null
		And: array 2 is [null, "test", null, "string", null]
		When: toString is called
		Then: result is [null, "test", null, "string", null]
		Passed: true
		Expected Value: [null, "test", null, "string", null]
		Given Value: [null, "test", null, "string", null]


		Scenario: 2 nulls
		Given: array 1 is null
		And: array 2 is null
		When: toString is called
		Then: result is null
		Passed: true
		Expected Value: null
		Given Value: null

	Feature Passed: true

	Feature: ArrayList<Integer> contains an int

		Scenario: int in normal list
		Given: list is [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
		And: search term is 5
		When: contains() is called
		Then: result is true
		Passed: true
		Expected Value: true
		Given Value: true


		Scenario: int not in normal list
		Given: list is [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
		And: search term is 11
		When: contains() is called
		Then: result is false
		Passed: true
		Expected Value: false
		Given Value: false


		Scenario: int not in empty list
		Given: list is []
		And: search term is 5
		When: contains() is called
		Then: result is false
		Passed: true
		Expected Value: false
		Given Value: false


		Scenario: int not in null
		Given: list is null
		And: search term is 5
		When: contains() is called
		Then: result is false
		Passed: true
		Expected Value: false
		Given Value: false


		Scenario: int in null list
		Given: list is [null, null, null, null, null, null, null, null, null, null]
		And: search term is 11
		When: contains() is called
		Then: result is false
		Passed: true
		Expected Value: false
		Given Value: false


		Scenario: int in list containing a null
		Given: list is [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, null]
		And: search term is 5
		When: contains() is called
		Then: result is true
		Passed: true
		Expected Value: true
		Given Value: true


		Scenario: int not in list containing a null
		Given: list is [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, null]
		And: search term is 11
		When: contains() is called
		Then: result is false
		Passed: true
		Expected Value: false
		Given Value: false


		Scenario: int in normal list
		Given: list is [-10, -9, -8, -7, -6, -5, -4, -3, -2, -1]
		And: search term is -5
		When: contains() is called
		Then: result is true
		Passed: true
		Expected Value: true
		Given Value: true

	Feature Passed: true

	Feature: int[] contains an int

		Scenario: int in normal list
		Given: list is [1, 2, 3, 4, 5, 6, 7, 8, 9]
		And: search term is 5
		When: contains() is called
		Then: result is true
		Passed: true
		Expected Value: true
		Given Value: true


		Scenario: int not in normal list
		Given: list is [1, 2, 3, 4, 5, 6, 7, 8, 9]
		And: search term is 11
		When: contains() is called
		Then: result is false
		Passed: true
		Expected Value: false
		Given Value: false


		Scenario: int not in empty list
		Given: list is []
		And: search term is 5
		When: contains() is called
		Then: result is false
		Passed: true
		Expected Value: false
		Given Value: false


		Scenario: int not in null
		Given: list is null
		And: search term is 5
		When: contains() is called
		Then: result is false
		Passed: true
		Expected Value: false
		Given Value: false


		Scenario: int in normal list
		Given: list is [-1, -2, -3, -4, -5, -6, -7, -8, -9]
		And: search term is -5
		When: contains() is called
		Then: result is true
		Passed: true
		Expected Value: true
		Given Value: true

	Feature Passed: true

All Features Passed: true
Class in Test: Months

	Feature: Months enum toString

		Scenario: Months enum is January
		Given: expected months are ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		When: month.toString() called
		Then: January is returned
		Passed: true
		Expected Value: January
		Given Value: January


		Scenario: Months enum is February
		Given: expected months are ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		When: month.toString() called
		Then: February is returned
		Passed: true
		Expected Value: February
		Given Value: February


		Scenario: Months enum is March
		Given: expected months are ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		When: month.toString() called
		Then: March is returned
		Passed: true
		Expected Value: March
		Given Value: March


		Scenario: Months enum is April
		Given: expected months are ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		When: month.toString() called
		Then: April is returned
		Passed: true
		Expected Value: April
		Given Value: April


		Scenario: Months enum is May
		Given: expected months are ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		When: month.toString() called
		Then: May is returned
		Passed: true
		Expected Value: May
		Given Value: May


		Scenario: Months enum is June
		Given: expected months are ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		When: month.toString() called
		Then: June is returned
		Passed: true
		Expected Value: June
		Given Value: June


		Scenario: Months enum is July
		Given: expected months are ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		When: month.toString() called
		Then: July is returned
		Passed: true
		Expected Value: July
		Given Value: July


		Scenario: Months enum is August
		Given: expected months are ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		When: month.toString() called
		Then: August is returned
		Passed: true
		Expected Value: August
		Given Value: August


		Scenario: Months enum is September
		Given: expected months are ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		When: month.toString() called
		Then: September is returned
		Passed: true
		Expected Value: September
		Given Value: September


		Scenario: Months enum is October
		Given: expected months are ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		When: month.toString() called
		Then: October is returned
		Passed: true
		Expected Value: October
		Given Value: October


		Scenario: Months enum is November
		Given: expected months are ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		When: month.toString() called
		Then: November is returned
		Passed: true
		Expected Value: November
		Given Value: November


		Scenario: Months enum is December
		Given: expected months are ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		When: month.toString() called
		Then: December is returned
		Passed: true
		Expected Value: December
		Given Value: December

	Feature Passed: true

	Feature: Months enum getId

		Scenario: Months enum is January
		Given: expected ids are [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
		When: month.getid() called
		Then: 0 is returned
		Passed: true
		Expected Value: 0
		Given Value: 0


		Scenario: Months enum is February
		Given: expected ids are [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
		When: month.getid() called
		Then: 1 is returned
		Passed: true
		Expected Value: 1
		Given Value: 1


		Scenario: Months enum is March
		Given: expected ids are [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
		When: month.getid() called
		Then: 2 is returned
		Passed: true
		Expected Value: 2
		Given Value: 2


		Scenario: Months enum is April
		Given: expected ids are [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
		When: month.getid() called
		Then: 3 is returned
		Passed: true
		Expected Value: 3
		Given Value: 3


		Scenario: Months enum is May
		Given: expected ids are [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
		When: month.getid() called
		Then: 4 is returned
		Passed: true
		Expected Value: 4
		Given Value: 4


		Scenario: Months enum is June
		Given: expected ids are [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
		When: month.getid() called
		Then: 5 is returned
		Passed: true
		Expected Value: 5
		Given Value: 5


		Scenario: Months enum is July
		Given: expected ids are [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
		When: month.getid() called
		Then: 6 is returned
		Passed: true
		Expected Value: 6
		Given Value: 6


		Scenario: Months enum is August
		Given: expected ids are [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
		When: month.getid() called
		Then: 7 is returned
		Passed: true
		Expected Value: 7
		Given Value: 7


		Scenario: Months enum is September
		Given: expected ids are [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
		When: month.getid() called
		Then: 8 is returned
		Passed: true
		Expected Value: 8
		Given Value: 8


		Scenario: Months enum is October
		Given: expected ids are [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
		When: month.getid() called
		Then: 9 is returned
		Passed: true
		Expected Value: 9
		Given Value: 9


		Scenario: Months enum is November
		Given: expected ids are [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
		When: month.getid() called
		Then: 10 is returned
		Passed: true
		Expected Value: 10
		Given Value: 10


		Scenario: Months enum is December
		Given: expected ids are [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
		When: month.getid() called
		Then: 11 is returned
		Passed: true
		Expected Value: 11
		Given Value: 11

	Feature Passed: true

	Feature: Get Months enum by String

		Scenario:valid String
		Given: given id is January
		When: Months.get() called with January
		Then: m is January
		Passed: true
		Expected Value: January
		Given Value: January


		Scenario:valid String
		Given: given id is February
		When: Months.get() called with February
		Then: m is February
		Passed: true
		Expected Value: February
		Given Value: February


		Scenario:valid String
		Given: given id is March
		When: Months.get() called with March
		Then: m is March
		Passed: true
		Expected Value: March
		Given Value: March


		Scenario:valid String
		Given: given id is April
		When: Months.get() called with April
		Then: m is April
		Passed: true
		Expected Value: April
		Given Value: April


		Scenario:valid String
		Given: given id is May
		When: Months.get() called with May
		Then: m is May
		Passed: true
		Expected Value: May
		Given Value: May


		Scenario:valid String
		Given: given id is June
		When: Months.get() called with June
		Then: m is June
		Passed: true
		Expected Value: June
		Given Value: June


		Scenario:valid String
		Given: given id is July
		When: Months.get() called with July
		Then: m is July
		Passed: true
		Expected Value: July
		Given Value: July


		Scenario:valid String
		Given: given id is August
		When: Months.get() called with August
		Then: m is August
		Passed: true
		Expected Value: August
		Given Value: August


		Scenario:valid String
		Given: given id is September
		When: Months.get() called with September
		Then: m is September
		Passed: true
		Expected Value: September
		Given Value: September


		Scenario:valid String
		Given: given id is October
		When: Months.get() called with October
		Then: m is October
		Passed: true
		Expected Value: October
		Given Value: October


		Scenario:valid String
		Given: given id is November
		When: Months.get() called with November
		Then: m is November
		Passed: true
		Expected Value: November
		Given Value: November


		Scenario:valid String
		Given: given id is December
		When: Months.get() called with December
		Then: m is December
		Passed: true
		Expected Value: December
		Given Value: December


		Scenario:invalid id given
		Given: given id is abcdce
		When: Months.get() called with abcdce
		Then: m is null
		Passed: true
		Expected Value: null
		Given Value: null


		Scenario:invalid id given
		Given: given id is null
		When: Months.get() called with null
		Then: m is null
		Passed: true
		Expected Value: null
		Given Value: null

	Feature Passed: true

	Feature: Get Months enum by id

		Scenario:valid id
		Given: given id is 0
		When: Months.get() called with 0
		Then: m is January
		Passed: true
		Expected Value: January
		Given Value: January


		Scenario:valid id
		Given: given id is 1
		When: Months.get() called with 1
		Then: m is February
		Passed: true
		Expected Value: February
		Given Value: February


		Scenario:valid id
		Given: given id is 2
		When: Months.get() called with 2
		Then: m is March
		Passed: true
		Expected Value: March
		Given Value: March


		Scenario:valid id
		Given: given id is 3
		When: Months.get() called with 3
		Then: m is April
		Passed: true
		Expected Value: April
		Given Value: April


		Scenario:valid id
		Given: given id is 4
		When: Months.get() called with 4
		Then: m is May
		Passed: true
		Expected Value: May
		Given Value: May


		Scenario:valid id
		Given: given id is 5
		When: Months.get() called with 5
		Then: m is June
		Passed: true
		Expected Value: June
		Given Value: June


		Scenario:valid id
		Given: given id is 6
		When: Months.get() called with 6
		Then: m is July
		Passed: true
		Expected Value: July
		Given Value: July


		Scenario:valid id
		Given: given id is 7
		When: Months.get() called with 7
		Then: m is August
		Passed: true
		Expected Value: August
		Given Value: August


		Scenario:valid id
		Given: given id is 8
		When: Months.get() called with 8
		Then: m is September
		Passed: true
		Expected Value: September
		Given Value: September


		Scenario:valid id
		Given: given id is 9
		When: Months.get() called with 9
		Then: m is October
		Passed: true
		Expected Value: October
		Given Value: October


		Scenario:valid id
		Given: given id is 10
		When: Months.get() called with 10
		Then: m is November
		Passed: true
		Expected Value: November
		Given Value: November


		Scenario:valid id
		Given: given id is 11
		When: Months.get() called with 11
		Then: m is December
		Passed: true
		Expected Value: December
		Given Value: December


		Scenario:invalid id given
		Given: given id is 12
		When: Months.get() called with 12
		Then: m is null
		Passed: true
		Expected Value: null
		Given Value: null

	Feature Passed: true

	Feature: toArray gives array of month names

		Scenario: toArray called
		Given: expected months are ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		When: toArray is called
		Then: array is ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		Passed: true
		Expected Value: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
		Given Value: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]

	Feature Passed: true

All Features Passed: true

Class in Test: Menu

	Feature: Menu getUserChoice

		Scenario:Valid Input to menu
		Given: given Menu is part01.Menu@2d98a335
		When: menu.getUserChoice called
		Then: output is:
test menu
+++++++++
1. opt1
2. opt2
3. opt3

Enter Selection:
		Passed: true
		Expected Value:
test menu
+++++++++
1. opt1
2. opt2
3. opt3

Enter Selection:
		Given Value:
test menu
+++++++++
1. opt1
2. opt2
3. opt3

Enter Selection: 


		Scenario:No Input then a Valid Input
		Given: given Menu is part01.Menu@16b98e56
		When: menu.getUserChoice called
		Then: output is:
test menu
+++++++++
1. opt1
2. opt2
3. opt3

Enter Selection:
		Passed: true
		Expected Value:
test menu
+++++++++
1. opt1
2. opt2
3. opt3

Enter Selection:
		Given Value:
test menu
+++++++++
1. opt1
2. opt2
3. opt3

Enter Selection: 


		Scenario:Value Greater Than Max Value then valid Value
		Given: given Menu is part01.Menu@7ef20235
		When: menu.getUserChoice called
		Then: output is:
test menu
+++++++++
1. opt1
2. opt2
3. opt3

Enter Selection: Enter Selection:
		Passed: true
		Expected Value:
test menu
+++++++++
1. opt1
2. opt2
3. opt3

Enter Selection: Enter Selection:
		Given Value:
test menu
+++++++++
1. opt1
2. opt2
3. opt3

Enter Selection: Enter Selection: 


		Scenario:Value Greater Than Max Value then valid Value
		Given: given Menu is part01.Menu@27d6c5e0
		When: menu.getUserChoice called
		Then: output is:
test menu
+++++++++
1. opt1
2. opt2
3. opt3

Enter Selection: Enter Selection:
		Passed: true
		Expected Value:
test menu
+++++++++
1. opt1
2. opt2
3. opt3

Enter Selection: Enter Selection:
		Given Value:
test menu
+++++++++
1. opt1
2. opt2
3. opt3

Enter Selection: Enter Selection: 


		Scenario:Value Greater Than Max Value then valid Value
		Given: given Menu is part01.Menu@3feba861
		When: menu.getUserChoice called
		Then: output is:
test menu
+++++++++
1. opt1
2. opt2
3. opt3

Enter Selection: Enter Selection:
		Passed: true
		Expected Value:
test menu
+++++++++
1. opt1
2. opt2
3. opt3

Enter Selection: Enter Selection:
		Given Value:
test menu
+++++++++
1. opt1
2. opt2
3. opt3

Enter Selection: Enter Selection: 

	Feature Passed: true

All Features Passed: true

Class in Test: SubMenu

	Feature: SubMenu constructor via getUserChoice

		Scenario:Normal Construction
		Given: given Menu is part01.SubMenu@10f87f48
		When: menu.getUserChoice called
		Then: output is:
Manage Testers
++++++++++++++
1. Add Tester
2. View Tester
3. Update Tester
4. Delete Tester
5. Quit

Enter Selection: 
		Passed: true
		Expected Value:
Manage Testers
++++++++++++++
1. Add Tester
2. View Tester
3. Update Tester
4. Delete Tester
5. Quit

Enter Selection: 
		Given Value:
Manage Testers
++++++++++++++
1. Add Tester
2. View Tester
3. Update Tester
4. Delete Tester
5. Quit

Enter Selection: 


		Scenario:Normal Construction
		Given: given Menu is part01.SubMenu@b4c966a
		When: menu.getUserChoice called
		Then: output is:
Manage nulls
++++++++++++
1. Add null
2. View null
3. Update null
4. Delete null
5. Quit

Enter Selection: 
		Passed: true
		Expected Value:
Manage nulls
++++++++++++
1. Add null
2. View null
3. Update null
4. Delete null
5. Quit

Enter Selection: 
		Given Value:
Manage nulls
++++++++++++
1. Add null
2. View null
3. Update null
4. Delete null
5. Quit

Enter Selection: 

	Feature Passed: true

	Feature: SubMenu getType

		Scenario:Normal Operation
		Given: given Menu is part01.SubMenu@2f4d3709
		When: menu.getUserChoice called
		Then: output is:
Tester
		Passed: true
		Expected Value:
Tester
		Given Value:
Tester


		Scenario:Normal Operation
		Given: given Menu is part01.SubMenu@4e50df2e
		When: menu.getUserChoice called
		Then: output is:
null
		Passed: true
		Expected Value:
null
		Given Value:
null

	Feature Passed: true

All Features Passed: true

Class in Test: Artifact

	Feature: Artifact Constructor

		Scenario:valid Parameters
		Given: artifact name is test
		AND: artifact type is artifact
		AND: artifact engagementTime is 10
		When: new Artifact
		Then: output is:
no exception
		Passed: true
		Expected Value:
no exception
		Given Value:
no exception


		Scenario:invalid parameters, time is 0
		Given: artifact name is test
		AND: artifact type is artifact
		AND: artifact engagementTime is 0
		When: new Artifact
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:invalid parameters, time is negative
		Given: artifact name is test
		AND: artifact type is artifact
		AND: artifact engagementTime is -10
		When: new Artifact
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown

	Feature Passed: true

	Feature: Artifact getID()

		Scenario:normal Artifact
		Given: testArtifact ID: 1,	Name: test,	Type: artifact,Engagement Time: 10 minutes
		When: testArtifact.getID
		Then: output is:
1
		Passed: true
		Expected Value:
1
		Given Value:
1


		Scenario:multiple Artifacts iterate the ID
		Given: testArtifact ID: 2,	Name: test,	Type: artifact,Engagement Time: 10 minutes
		When: testArtifact.getID
		Then: output is:
2
		Passed: true
		Expected Value:
2
		Given Value:
2


		Scenario:multiple Artifacts iterate the ID
		Given: testArtifact ID: 3,	Name: test,	Type: artifact,Engagement Time: 10 minutes
		When: testArtifact.getID
		Then: output is:
3
		Passed: true
		Expected Value:
3
		Given Value:
3


		Scenario:multiple Artifacts iterate the ID
		Given: testArtifact ID: 4,	Name: test,	Type: artifact,Engagement Time: 10 minutes
		When: testArtifact.getID
		Then: output is:
4
		Passed: true
		Expected Value:
4
		Given Value:
4


		Scenario:null Properties
		Given: testArtifact ID: 5,	Name: null,	Type: null,	Engagement Time: 1 minutes
		When: testArtifact.getID
		Then: output is:
5
		Passed: true
		Expected Value:
5
		Given Value:
5

	Feature Passed: true

	Feature: Artifact getName()

		Scenario:normal Artifact
		Given: testArtifact ID: 6,	Name: test,	Type: artifact,Engagement Time: 10 minutes
		When: testArtifact.getName
		Then: output is:
test
		Passed: true
		Expected Value:
test
		Given Value:
test


		Scenario:null name
		Given: testArtifact ID: 7,	Name: null,	Type: artifact,Engagement Time: 10 minutes
		When: testArtifact.getName
		Then: output is:
null
		Passed: true
		Expected Value:
null
		Given Value:
null

	Feature Passed: true

	Feature: Artifact setName()

		Scenario:normal Artifact
		Given: testArtifact ID: 8,	Name: set name test,	Type: artifact,	Engagement Time: 10 minutes
		When: testArtifact.setName called with set name test
		Then: output of getName is:
set name test
		Passed: true
		Expected Value:
set name test
		Given Value:
set name test


		Scenario:set with initial name as null
		Given: testArtifact ID: 9,	Name: set name test,	Type: artifact,	Engagement Time: 10 minutes
		When: testArtifact.setName called with set name test
		Then: output of getName is:
set name test
		Passed: true
		Expected Value:
set name test
		Given Value:
set name test


		Scenario:set name to null
		Given: testArtifact ID: 10,	Name: null,	Type: artifact,Engagement Time: 10 minutes
		When: testArtifact.setName called with null
		Then: output of getName is:
null
		Passed: true
		Expected Value:
null
		Given Value:
null

	Feature Passed: true

	Feature: Artifact getType()

		Scenario:normal Artifact
		Given: testArtifact ID: 11,	Name: test,	Type: artifact,Engagement Time: 10 minutes
		When: testArtifact.getType()
		Then: output is:
artifact
		Passed: true
		Expected Value:
artifact
		Given Value:
artifact


		Scenario:null type
		Given: testArtifact ID: 12,	Name: test,	Type: null,	Engagement Time: 10 minutes
		When: testArtifact.getType()
		Then: output is:
null
		Passed: true
		Expected Value:
null
		Given Value:
null

	Feature Passed: true

	Feature: Artifact setType()

		Scenario:normal Artifact
		Given: testArtifact ID: 13,	Name: test,	Type: set type test,	Engagement Time: 10 minutes
		When: testArtifact.setType() called with set type test
		Then: output of getType() is:
set type test
		Passed: true
		Expected Value:
set type test
		Given Value:
set type test


		Scenario:set with initial name as null
		Given: testArtifact ID: 14,	Name: test,	Type: set name test,	Engagement Time: 10 minutes
		When: testArtifact.setType() called with set name test
		Then: output of getType() is:
set name test
		Passed: true
		Expected Value:
set name test
		Given Value:
set name test


		Scenario:set with initial name as null
		Given: testArtifact ID: 15,	Name: test,	Type: null,	Engagement Time: 10 minutes
		When: testArtifact.setType() called with null
		Then: output of getType() is:
null
		Passed: true
		Expected Value:
null
		Given Value:
null

	Feature Passed: true

	Feature: Artifact getEngagementTime()

		Scenario:normal Artifact
		Given: testArtifact ID: 16,	Name: test,	Type: artifact,Engagement Time: 10 minutes
		When: testArtifact.getEngagementTime()
		Then: output is:
10
		Passed: true
		Expected Value:
10
		Given Value:
10

	Feature Passed: true

	Feature: Artifact setEngagementTime()

		Scenario:normal use
		Given: testArtifact ID: 17,	Name: test,	Type: artifact,Engagement Time: 5 minutes
		When: testArtifact.setEngagementTime() called with 5
		Then: output of getEngagementTime() is:
5
		Passed: true
		Expected Value:
5
		Given Value:
5


		Scenario:invalid time
		Given: testArtifact ID: 18,	Name: test,	Type: null,	Engagement Time: 10 minutes
		When: testArtifact.setEngagementTime() called with -5
		Then: output of getEngagementTime() is:
-1
		Passed: true
		Expected Value:
-1
		Given Value:
-1

	Feature Passed: true

	Feature: Artifact setEngagementTime()

		Scenario:normal use
		Given: testArtifact ID: 19,	Name: test,	Type: artifact,Engagement Time: 10 minutes
		When: testArtifact.toString()
		Then: output of toString() is:
ID: 19,	Name: test,	Type: artifact,	Engagement Time: 10 minutes
		Passed: true
		Expected Value:
ID: 19,	Name: test,	Type: artifact,	Engagement Time: 10 minutes
		Given Value:
ID: 19,	Name: test,	Type: artifact,	Engagement Time: 10 minutes

	Feature Passed: true

All Features Passed: true

Class in Test: Exhibit

	Feature: Exhibit Constructor

		Scenario:valid Parameters
		Given: exhibit name is test
		AND: artifacts are [0, 1, 2, 3]
		AND: route is [a, b, c, d]
		When: new Artifact
		Then: output is:
no exception
		Passed: true
		Expected Value:
no exception
		Given Value:
no exception


		Scenario:more artifacts than route
		Given: exhibit name is test
		AND: artifacts are [0, 1, 2, 3]
		AND: route is [a, b, c]
		When: new Artifact
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:more route than artifacts
		Given: exhibit name is test
		AND: artifacts are [0, 1, 2]
		AND: route is [a, b, c, d]
		When: new Artifact
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:empty artifacts
		Given: exhibit name is test
		AND: artifacts are []
		AND: route is [a, b, c, d]
		When: new Artifact
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:empty route
		Given: exhibit name is test
		AND: artifacts are [0, 1, 2, 3]
		AND: route is []
		When: new Artifact
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:both empty
		Given: exhibit name is test
		AND: artifacts are []
		AND: route is []
		When: new Artifact
		Then: output is:
no exception
		Passed: true
		Expected Value:
no exception
		Given Value:
no exception


		Scenario:null artifacts
		Given: exhibit name is test
		AND: artifacts are null
		AND: route is [a, b, c, d]
		When: new Artifact
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:null route
		Given: exhibit name is test
		AND: artifacts are [0, 1, 2, 3]
		AND: route is null
		When: new Artifact
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:both null
		Given: exhibit name is test
		AND: artifacts are null
		AND: route is null
		When: new Artifact
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown

	Feature Passed: true

	Feature: Exhibit getID

		Scenario:normal Exhibit
		Given: testExhibit ID: 2	Name: test
		When: testExhibit.getID
		Then: output is:
2
		Passed: true
		Expected Value:
2
		Given Value:
2


		Scenario:multiple Exhibits iterate the ID
		Given: testExhibit ID: 3	Name: test
		When: testExhibit.getID
		Then: output is:
3
		Passed: true
		Expected Value:
3
		Given Value:
3


		Scenario:multiple Exhibits iterate the ID
		Given: testExhibit ID: 4	Name: test
		When: testExhibit.getID
		Then: output is:
4
		Passed: true
		Expected Value:
4
		Given Value:
4


		Scenario:multiple Exhibits iterate the ID
		Given: testExhibit ID: 5	Name: test
		When: testExhibit.getID
		Then: output is:
5
		Passed: true
		Expected Value:
5
		Given Value:
5

	Feature Passed: true

	Feature: Exhibit getName

		Scenario:normal Exhibit
		Given: testExhibit ID: 6	Name: test
		When: testExhibit.getName
		Then: output is:
test
		Passed: true
		Expected Value:
test
		Given Value:
test

	Feature Passed: true

	Feature: Artifact setName()

		Scenario:normal exhibit
		Given: testExhibit ID: 7	Name: set name test
		When: testExhibit.setName callled with set name test
		Then: output of getName is:
set name test
		Passed: true
		Expected Value:
set name test
		Given Value:
set name test


		Scenario:set name to null
		Given: testExhibit ID: 8	Name: null
		When: testExhibit.setName callled with null
		Then: output of getName is:
null
		Passed: true
		Expected Value:
null
		Given Value:
null

	Feature Passed: true

	Feature: Exhibit getArtifactsID

		Scenario:normal exhibit
		Given: testExhibit ID: 9	Name: test
		When: testExhibit.getArtifactsID
		Then: output is:
[0, 1, 2, 3]
		Passed: true
		Expected Value:
[0, 1, 2, 3]
		Given Value:
[0, 1, 2, 3]


		Scenario:no artifacts
		Given: testExhibit ID: 10	Name: test
		When: testExhibit.getArtifactsID
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: Exhibit setArtifactsID

		Scenario:normal valid use
		Given: testExhibit ID: 11	Name: test
		When: testExhibit.setArtifactsID called with [4, 5, 6, 7]
		Then: output of getArtifactsID is:
[4, 5, 6, 7]
		Passed: true
		Expected Value:
[4, 5, 6, 7]
		Given Value:
[4, 5, 6, 7]


		Scenario:invalid use, too few artifacts
		Given: testExhibit ID: 12	Name: test
		When: testExhibit.setArtifactsID called with [4, 5, 6]
		Then: output of getArtifactsID is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:invalid use, too many artifacts
		Given: testExhibit ID: 13	Name: test
		When: testExhibit.setArtifactsID called with [4, 5, 6, 7, 8]
		Then: output of getArtifactsID is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown

	Feature Passed: true

	Feature: Exhibit getRoute

		Scenario:normal exhibit
		Given: testExhibit ID: 14	Name: test
		When: testExhibit.getRoute
		Then: output is:
[a, b, c, d]
		Passed: true
		Expected Value:
[a, b, c, d]
		Given Value:
[a, b, c, d]


		Scenario:no route
		Given: testExhibit ID: 15	Name: test
		When: testExhibit.getRoute
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: Exhibit setArtifactsID

		Scenario:normal valid use
		Given: testExhibit ID: 16	Name: test
		When: testExhibit.setRoute called with [e, f, g, h]
		Then: output of getRoute is:
[e, f, g, h]
		Passed: true
		Expected Value:
[e, f, g, h]
		Given Value:
[e, f, g, h]


		Scenario:invalid use, too short route
		Given: testExhibit ID: 17	Name: test
		When: testExhibit.setRoute called with [e, f, g]
		Then: output of getRoute is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:invalid use, too long route
		Given: testExhibit ID: 18	Name: test
		When: testExhibit.setRoute called with [e, f, g, h, i]
		Then: output of getRoute is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown

	Feature Passed: true

	Feature: Exhibit toString

		Scenario:normal exhibit toString
		Given: testExhibit ID: 19	Name: test
		When: testExhibit.toString
		Then: output is:
ID: 19	Name: test
		Passed: true
		Expected Value:
ID: 19	Name: test
		Given Value:
ID: 19	Name: test

	Feature Passed: true

	Feature: Exhibit removeArtifact

		Scenario:Normal operation
		Given: testExhibit ID: 20	Name: test
		When: testExhibit.removeArtifact called with 2
		Then: output is:
[0, 1, 3]
		Passed: true
		Expected Value:
[0, 1, 3]
		Given Value:
[0, 1, 3]


		Scenario:Index to remove exceeds range - nothing done
		Given: testExhibit ID: 21	Name: test
		When: testExhibit.removeArtifact called with 4
		Then: output is:
[0, 1, 2, 3]
		Passed: true
		Expected Value:
[0, 1, 2, 3]
		Given Value:
[0, 1, 2, 3]


		Scenario:Index to remove below range - nothing done
		Given: testExhibit ID: 22	Name: test
		When: testExhibit.removeArtifact called with -1
		Then: output is:
[0, 1, 2, 3]
		Passed: true
		Expected Value:
[0, 1, 2, 3]
		Given Value:
[0, 1, 2, 3]

	Feature Passed: true

	Feature: Exhibit removeSign

		Scenario:Normal operation
		Given: testExhibit ID: 23	Name: test
		When: testExhibit.removeSign called with 2
		Then: output is:
[a, b, d]
		Passed: true
		Expected Value:
[a, b, d]
		Given Value:
[a, b, d]


		Scenario:Index to remove exceeds range - nothing done
		Given: testExhibit ID: 24	Name: test
		When: testExhibit.removeSign called with 4
		Then: output is:
[a, b, c, d]
		Passed: true
		Expected Value:
[a, b, c, d]
		Given Value:
[a, b, c, d]


		Scenario:Index to remove below range - nothing done
		Given: testExhibit ID: 25	Name: test
		When: testExhibit.removeSign called with -1
		Then: output is:
[a, b, c, d]
		Passed: true
		Expected Value:
[a, b, c, d]
		Given Value:
[a, b, c, d]

	Feature Passed: true

	Feature: Exhibit findArtifactIndex

		Scenario:normal use
		Given: testExhibit ID: 26	Name: test
		When: testExhibit.findArtifactID called with 0
		Then: output is:
0
		Passed: true
		Expected Value:
0
		Given Value:
0


		Scenario:normal use
		Given: testExhibit ID: 27	Name: test
		When: testExhibit.findArtifactID called with 5
		Then: output is:
-1
		Passed: true
		Expected Value:
-1
		Given Value:
-1

	Feature Passed: true

	Feature: Exhibit getRouteArray

		Scenario:normal use
		Given: testExhibit ID: 28	Name: test
		When: testExhibit.getRouteArray
		Then: output is:
[Ljava.lang.String;@30dae81
		Passed: true
		Expected Value:
[Ljava.lang.String;@30dae81
		Given Value:
[Ljava.lang.String;@1b2c6ec2


		Scenario:normal use
		Given: testExhibit ID: 29	Name: test
		When: testExhibit.getRouteArray
		Then: output is:
[Ljava.lang.String;@4edde6e5
		Passed: true
		Expected Value:
[Ljava.lang.String;@4edde6e5
		Given Value:
[Ljava.lang.String;@70177ecd

	Feature Passed: true

All Features Passed: true

Class in Test: ExhibitionPlan

	Feature: ExhibitionPlan constructor

		Scenario:valid consruction
		Given: exhibitionPlan data [ [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2]]
		When: new ExhibitionPlan with [ [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2], [0, 1, 2]]
		AND: [ID: 0	Name: test, ID: 1	Name: test, ID: 2	Name: test, ID: 3	Name: test, ID: 4	Name: test, ID: 5	Name: test, ID: 6	Name: test, ID: 7	Name: test, ID: 8	Name: test, ID: 9	Name: test]		Then: output is:
no exception
		Passed: true
		Expected Value:
no exception
		Given Value:
no exception


		Scenario:invalid consruction, not enough months
		Given: exhibitionPlan data [ [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12]]
		When: new ExhibitionPlan with [ [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12], [10, 11, 12]]
		AND: [ID: 10	Name: test, ID: 11	Name: test, ID: 12	Name: test, ID: 13	Name: test, ID: 14	Name: test, ID: 15	Name: test, ID: 16	Name: test, ID: 17	Name: test, ID: 18	Name: test, ID: 19	Name: test]		Then: output is:
Incorrect Months Exception
		Passed: true
		Expected Value:
Incorrect Months Exception
		Given Value:
Incorrect Months Exception


		Scenario:invalid consruction, too many months
		Given: exhibitionPlan data [ [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22]]
		When: new ExhibitionPlan with [ [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22], [20, 21, 22]]
		AND: [ID: 20	Name: test, ID: 21	Name: test, ID: 22	Name: test, ID: 23	Name: test, ID: 24	Name: test, ID: 25	Name: test, ID: 26	Name: test, ID: 27	Name: test, ID: 28	Name: test, ID: 29	Name: test]		Then: output is:
Incorrect Months Exception
		Passed: true
		Expected Value:
Incorrect Months Exception
		Given Value:
Incorrect Months Exception


		Scenario:invalid consruction, empty array
		Given: exhibitionPlan data []
		When: new ExhibitionPlan with []
		AND: [ID: 30	Name: test, ID: 31	Name: test, ID: 32	Name: test, ID: 33	Name: test, ID: 34	Name: test, ID: 35	Name: test, ID: 36	Name: test, ID: 37	Name: test, ID: 38	Name: test, ID: 39	Name: test]		Then: output is:
Incorrect Months Exception
		Passed: true
		Expected Value:
Incorrect Months Exception
		Given Value:
Incorrect Months Exception


		Scenario:invalid consruction, duplicate artifacts
		Given: exhibitionPlan data [ [40, 40, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42]]
		When: new ExhibitionPlan with [ [40, 40, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42], [40, 41, 42]]
		AND: [ID: 40	Name: test, ID: 41	Name: test, ID: 42	Name: test, ID: 43	Name: test, ID: 44	Name: test, ID: 45	Name: test, ID: 46	Name: test, ID: 47	Name: test, ID: 48	Name: test, ID: 49	Name: test]		Then: output is:
duplicate artifacts exception
		Passed: true
		Expected Value:
duplicate artifacts exception
		Given Value:
duplicate artifacts exception


		Scenario:valid consruction, no halls
		Given: exhibitionPlan data [ null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, []]
		When: new ExhibitionPlan with [ null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, []]
		AND: [ID: 50	Name: test, ID: 51	Name: test, ID: 52	Name: test, ID: 53	Name: test, ID: 54	Name: test, ID: 55	Name: test, ID: 56	Name: test, ID: 57	Name: test, ID: 58	Name: test, ID: 59	Name: test]		Then: output is:
no exception
		Passed: true
		Expected Value:
no exception
		Given Value:
no exception

	Feature Passed: true

	Feature: ExhibitionPlan getNumberOfHalls

		Scenario:normal use
		Given: exhibitionPlan data part01.ExhibitionPlan@65b3120a
		When: getNumberOfHalls called
		Then: output is:
3
		Passed: true
		Expected Value:
3
		Given Value:
3


		Scenario:valid use, no halls in plan
		Given: exhibitionPlan data part01.ExhibitionPlan@6f539caf
		When: getNumberOfHalls called
		Then: output is:
0
		Passed: true
		Expected Value:
0
		Given Value:
0

	Feature Passed: true

	Feature: ExhibitionPlan getExhibitionPlan

		Scenario:normal use
		Given: exhibitionPlan is part01.ExhibitionPlan@79fc0f2f
		When: getExhibitionPlan called
		Then: output is:
[ [80, 81, 82], [80, 82, 81], [81, 80, 82], [81, 82, 80], [82, 80, 81], [82, 81, 80], [80, 81, 83], [80, 83, 81], [81, 80, 83], [81, 83, 80], [83, 81, 80], [83, 80, 81]]
		Passed: true
		Expected Value:
[ [80, 81, 82], [80, 82, 81], [81, 80, 82], [81, 82, 80], [82, 80, 81], [82, 81, 80], [80, 81, 83], [80, 83, 81], [81, 80, 83], [81, 83, 80], [83, 81, 80], [83, 80, 81]]
		Given Value:
[ [80, 81, 82], [80, 82, 81], [81, 80, 82], [81, 82, 80], [82, 80, 81], [82, 81, 80], [80, 81, 83], [80, 83, 81], [81, 80, 83], [81, 83, 80], [83, 81, 80], [83, 80, 81]]


		Scenario:normal use but no halls
		Given: exhibitionPlan is part01.ExhibitionPlan@50040f0c
		When: getExhibitionPlan called
		Then: output is:
[ null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, []]
		Passed: true
		Expected Value:
[ null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, []]
		Given Value:
[ null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, []]

	Feature Passed: true

	Feature: Exhibition Plan getExhibitsInMonth with Months enum

		Scenario:normal use
		Given: exhibitionPlan is part01.ExhibitionPlan@2dda6444
		When: getExhibitsInMonth called with Months enum December
		Then: output is:
[103, 100, 101]
		Passed: true
		Expected Value:
[103, 100, 101]
		Given Value:
[103, 100, 101]


		Scenario:empty plan
		Given: exhibitionPlan is part01.ExhibitionPlan@5e9f23b4
		When: getExhibitsInMonth called with Months enum February
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: Exhibition Plan getExhibitsInMonth with Months String name

		Scenario:normal use
		Given: exhibitionPlan is part01.ExhibitionPlan@4783da3f
		When: getExhibitsInMonth called with Months enum December
		Then: output is:
[123, 120, 121]
		Passed: true
		Expected Value:
[123, 120, 121]
		Given Value:
[123, 120, 121]


		Scenario:empty plan
		Given: exhibitionPlan is part01.ExhibitionPlan@378fd1ac
		When: getExhibitsInMonth called with Months enum February
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:invalid month name
		Given: exhibitionPlan is part01.ExhibitionPlan@49097b5d
		When: getExhibitsInMonth called with Months enum Not a Valid Month
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:null month name
		Given: exhibitionPlan is part01.ExhibitionPlan@6e2c634b
		When: getExhibitsInMonth called with Months enum null
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: Exhibition Plan getExhibitsInMonth with Months int id

		Scenario:normal use
		Given: exhibitionPlan is part01.ExhibitionPlan@37a71e93
		When: getExhibitsInMonth called with Months enum 11
		Then: output is:
[163, 160, 161]
		Passed: true
		Expected Value:
[163, 160, 161]
		Given Value:
[163, 160, 161]


		Scenario:empty plan
		Given: exhibitionPlan is part01.ExhibitionPlan@7e6cbb7a
		When: getExhibitsInMonth called with Months enum 1
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:invalid month name
		Given: exhibitionPlan is part01.ExhibitionPlan@7c3df479
		When: getExhibitsInMonth called with Months enum 12
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:null month name
		Given: exhibitionPlan is part01.ExhibitionPlan@7106e68e
		When: getExhibitsInMonth called with Months enum -1
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ExhibitionPlan getExhibitsInHall

		Scenario:normal use
		Given: exhibitionPlan is part01.ExhibitionPlan@7eda2dbb
		When: getExhibitsInHall called with hall num 3
		Then: output is:
[202, 201, 202, 200, 201, 200, 203, 201, 203, 200, 200, 201]
		Passed: true
		Expected Value:
[202, 201, 202, 200, 201, 200, 203, 201, 203, 200, 200, 201]
		Given Value:
[202, 201, 202, 200, 201, 200, 203, 201, 203, 200, 200, 201]


		Scenario:empty plan
		Given: exhibitionPlan is part01.ExhibitionPlan@6576fe71
		When: getExhibitsInHall called with hall num 1
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:invalid hall number
		Given: exhibitionPlan is part01.ExhibitionPlan@76fb509a
		When: getExhibitsInHall called with hall num 4
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:invalid hall number
		Given: exhibitionPlan is part01.ExhibitionPlan@300ffa5d
		When: getExhibitsInHall called with hall num -1
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: Exhibit getExhibitNames

		Scenario:normal test
		Given: exhibitionPlan is part01.ExhibitionPlan@1f17ae12
		When: getExhibitNames called with [ID: 240	Name: test, ID: 241	Name: test, ID: 242	Name: test, ID: 243	Name: test, ID: 244	Name: test, ID: 245	Name: test, ID: 246	Name: test, ID: 247	Name: test, ID: 248	Name: test, ID: 249	Name: test]
		Then: output is:
[[test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test]]
		Passed: true
		Expected Value:
[[test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test]]
		Given Value:
[[test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test], [test, test, test]]


		Scenario:empty plan
		Given: exhibitionPlan is part01.ExhibitionPlan@4d405ef7
		When: getExhibitNames called with [ID: 250	Name: test, ID: 251	Name: test, ID: 252	Name: test, ID: 253	Name: test, ID: 254	Name: test, ID: 255	Name: test, ID: 256	Name: test, ID: 257	Name: test, ID: 258	Name: test, ID: 259	Name: test]
		Then: output is:
[null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, []]
		Passed: true
		Expected Value:
[null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, []]
		Given Value:
[null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, [], null, []]

	Feature Passed: true

	Feature: ExhibitionPlan getExhibitNamesString

		Scenario:normal use
		Given: exhibitionPlan is part01.ExhibitionPlan@6193b845
		When: getExhibitNamesString called with [ID: 260	Name: test, ID: 261	Name: test, ID: 262	Name: test, ID: 263	Name: test, ID: 264	Name: test, ID: 265	Name: test, ID: 266	Name: test, ID: 267	Name: test, ID: 268	Name: test, ID: 269	Name: test]
		Then: output is:
["test", "test", "test"]
		Passed: true
		Expected Value:
["test", "test", "test"]
		Given Value:
["test", "test", "test"]

	Feature Passed: true

	Feature: ExhibitionPlan getExhibitNamesInMonth

		Scenario:normal use int month
		Given: exhibitionPlan is part01.ExhibitionPlan@2e817b38
		When: getExhibitNamesInMonth called with hall num [ID: 270	Name: test, ID: 271	Name: test, ID: 272	Name: test, ID: 273	Name: test, ID: 274	Name: test, ID: 275	Name: test, ID: 276	Name: test, ID: 277	Name: test, ID: 278	Name: test, ID: 279	Name: test]
		AND: 5
		Then: output is:
["test", "test", "test"]
		Passed: true
		Expected Value:
["test", "test", "test"]
		Given Value:
["test", "test", "test"]


		Scenario:normal use int month empty plan
		Given: exhibitionPlan is part01.ExhibitionPlan@c4437c4
		When: getExhibitNamesInMonth called with hall num [ID: 280	Name: test, ID: 281	Name: test, ID: 282	Name: test, ID: 283	Name: test, ID: 284	Name: test, ID: 285	Name: test, ID: 286	Name: test, ID: 287	Name: test, ID: 288	Name: test, ID: 289	Name: test]
		AND: 5
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:normal use Months month
		Given: exhibitionPlan is part01.ExhibitionPlan@433c675d
		When: getExhibitNamesInMonth called with hall num [ID: 290	Name: test, ID: 291	Name: test, ID: 292	Name: test, ID: 293	Name: test, ID: 294	Name: test, ID: 295	Name: test, ID: 296	Name: test, ID: 297	Name: test, ID: 298	Name: test, ID: 299	Name: test]
		AND: May
		Then: output is:
["test", "test", "test"]
		Passed: true
		Expected Value:
["test", "test", "test"]
		Given Value:
["test", "test", "test"]


		Scenario:normal use Months month empty plan
		Given: exhibitionPlan is part01.ExhibitionPlan@3f91beef
		When: getExhibitNamesInMonth called with hall num [ID: 300	Name: test, ID: 301	Name: test, ID: 302	Name: test, ID: 303	Name: test, ID: 304	Name: test, ID: 305	Name: test, ID: 306	Name: test, ID: 307	Name: test, ID: 308	Name: test, ID: 309	Name: test]
		AND: May
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:normal use String month
		Given: exhibitionPlan is part01.ExhibitionPlan@1a6c5a9e
		When: getExhibitNamesInMonth called with hall num [ID: 310	Name: test, ID: 311	Name: test, ID: 312	Name: test, ID: 313	Name: test, ID: 314	Name: test, ID: 315	Name: test, ID: 316	Name: test, ID: 317	Name: test, ID: 318	Name: test, ID: 319	Name: test]
		AND: March
		Then: output is:
["test", "test", "test"]
		Passed: true
		Expected Value:
["test", "test", "test"]
		Given Value:
["test", "test", "test"]


		Scenario:normal use String month empty plan
		Given: exhibitionPlan is part01.ExhibitionPlan@37bba400
		When: getExhibitNamesInMonth called with hall num [ID: 320	Name: test, ID: 321	Name: test, ID: 322	Name: test, ID: 323	Name: test, ID: 324	Name: test, ID: 325	Name: test, ID: 326	Name: test, ID: 327	Name: test, ID: 328	Name: test, ID: 329	Name: test]
		AND: March
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ExhibitionPlan getExhibitNamesInHall

		Scenario:normal use
		Given: exhibitionPlan is part01.ExhibitionPlan@179d3b25
		When: getExhibitNamesInHall called with hall num [ID: 330	Name: test, ID: 331	Name: test, ID: 332	Name: test, ID: 333	Name: test, ID: 334	Name: test, ID: 335	Name: test, ID: 336	Name: test, ID: 337	Name: test, ID: 338	Name: test, ID: 339	Name: test]
		AND: 2
		Then: output is:
["test", "test", "test", "test", "test", "test", "test", "test", "test", "test", "test", "test"]
		Passed: true
		Expected Value:
["test", "test", "test", "test", "test", "test", "test", "test", "test", "test", "test", "test"]
		Given Value:
["test", "test", "test", "test", "test", "test", "test", "test", "test", "test", "test", "test"]


		Scenario:normal use and empty plan
		Given: exhibitionPlan is part01.ExhibitionPlan@254989ff
		When: getExhibitNamesInHall called with hall num [ID: 340	Name: test, ID: 341	Name: test, ID: 342	Name: test, ID: 343	Name: test, ID: 344	Name: test, ID: 345	Name: test, ID: 346	Name: test, ID: 347	Name: test, ID: 348	Name: test, ID: 349	Name: test]
		AND: 2
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:negative hall no
		Given: exhibitionPlan is part01.ExhibitionPlan@5d099f62
		When: getExhibitNamesInHall called with hall num [ID: 350	Name: test, ID: 351	Name: test, ID: 352	Name: test, ID: 353	Name: test, ID: 354	Name: test, ID: 355	Name: test, ID: 356	Name: test, ID: 357	Name: test, ID: 358	Name: test, ID: 359	Name: test]
		AND: -5
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:not created hall
		Given: exhibitionPlan is part01.ExhibitionPlan@37f8bb67
		When: getExhibitNamesInHall called with hall num [ID: 360	Name: test, ID: 361	Name: test, ID: 362	Name: test, ID: 363	Name: test, ID: 364	Name: test, ID: 365	Name: test, ID: 366	Name: test, ID: 367	Name: test, ID: 368	Name: test, ID: 369	Name: test]
		AND: 5
		Then: output is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ExhibitionPlan getPlanString

		Scenario:normal test
		Given: exhibitionPlan is part01.ExhibitionPlan@49c2faae
		When: getPlanString called with [ID: 370	Name: test, ID: 371	Name: test, ID: 372	Name: test, ID: 373	Name: test, ID: 374	Name: test, ID: 375	Name: test, ID: 376	Name: test, ID: 377	Name: test, ID: 378	Name: test, ID: 379	Name: test]
		Then: output is:
             Exhibit Hall 1                          Exhibit Hall 2                          Exhibit Hall 3                          
January      test                                    test                                    test                                    
February     test                                    test                                    test                                    
March        test                                    test                                    test                                    
April        test                                    test                                    test                                    
May          test                                    test                                    test                                    
June         test                                    test                                    test                                    
July         test                                    test                                    test                                    
August       test                                    test                                    test                                    
September    test                                    test                                    test                                    
October      test                                    test                                    test                                    
November     test                                    test                                    test                                    
December     test                                    test                                    test                                    
		Passed: true
		Expected Value:
             Exhibit Hall 1                          Exhibit Hall 2                          Exhibit Hall 3                          
January      test                                    test                                    test                                    
February     test                                    test                                    test                                    
March        test                                    test                                    test                                    
April        test                                    test                                    test                                    
May          test                                    test                                    test                                    
June         test                                    test                                    test                                    
July         test                                    test                                    test                                    
August       test                                    test                                    test                                    
September    test                                    test                                    test                                    
October      test                                    test                                    test                                    
November     test                                    test                                    test                                    
December     test                                    test                                    test                                    
		Given Value:
             Exhibit Hall 1                          Exhibit Hall 2                          Exhibit Hall 3                          
January      test                                    test                                    test                                    
February     test                                    test                                    test                                    
March        test                                    test                                    test                                    
April        test                                    test                                    test                                    
May          test                                    test                                    test                                    
June         test                                    test                                    test                                    
July         test                                    test                                    test                                    
August       test                                    test                                    test                                    
September    test                                    test                                    test                                    
October      test                                    test                                    test                                    
November     test                                    test                                    test                                    
December     test                                    test                                    test                                    



		Scenario:normal test and empty plan
		Given: exhibitionPlan is part01.ExhibitionPlan@20ad9418
		When: getPlanString called with [ID: 380	Name: test, ID: 381	Name: test, ID: 382	Name: test, ID: 383	Name: test, ID: 384	Name: test, ID: 385	Name: test, ID: 386	Name: test, ID: 387	Name: test, ID: 388	Name: test, ID: 389	Name: test]
		Then: output is:
             
January      
February     
March        
April        
May          
June         
July         
August       
September    
October      
November     
December     

		Passed: true
		Expected Value:
             
January      
February     
March        
April        
May          
June         
July         
August       
September    
October      
November     
December     

		Given Value:
             
January      
February     
March        
April        
May          
June         
July         
August       
September    
October      
November     
December     


	Feature Passed: true

	Feature: ExhibitionPlan getMonthPlanString

		Scenario:normal use int month
		Given: exhibitionPlan is part01.ExhibitionPlan@31cefde0
		When: getMonthPlanString called with [ID: 390	Name: test, ID: 391	Name: test, ID: 392	Name: test, ID: 393	Name: test, ID: 394	Name: test, ID: 395	Name: test, ID: 396	Name: test, ID: 397	Name: test, ID: 398	Name: test, ID: 399	Name: test]
		Then: output is:
	Exhibit Hall 1	Exhibit Hall 2	Exhibit Hall 3	
June	test	test	test	
		Passed: true
		Expected Value:
	Exhibit Hall 1	Exhibit Hall 2	Exhibit Hall 3	
June	test	test	test	
		Given Value:
	Exhibit Hall 1	Exhibit Hall 2	Exhibit Hall 3	
June	test	test	test	


		Scenario:normal use int month and empty plan
		Given: exhibitionPlan is part01.ExhibitionPlan@439f5b3d
		When: getMonthPlanString called with [ID: 400	Name: test, ID: 401	Name: test, ID: 402	Name: test, ID: 403	Name: test, ID: 404	Name: test, ID: 405	Name: test, ID: 406	Name: test, ID: 407	Name: test, ID: 408	Name: test, ID: 409	Name: test]
		Then: output is:
	
June	
		Passed: true
		Expected Value:
	
June	
		Given Value:
	
June	


		Scenario:normal use Months month
		Given: exhibitionPlan is part01.ExhibitionPlan@1d56ce6a
		When: getMonthPlanString called with [ID: 410	Name: test, ID: 411	Name: test, ID: 412	Name: test, ID: 413	Name: test, ID: 414	Name: test, ID: 415	Name: test, ID: 416	Name: test, ID: 417	Name: test, ID: 418	Name: test, ID: 419	Name: test]
		Then: output is:
	Exhibit Hall 1	Exhibit Hall 2	Exhibit Hall 3	
May	test	test	test	
		Passed: true
		Expected Value:
	Exhibit Hall 1	Exhibit Hall 2	Exhibit Hall 3	
May	test	test	test	
		Given Value:
	Exhibit Hall 1	Exhibit Hall 2	Exhibit Hall 3	
May	test	test	test	


		Scenario:normal use Months month and empty plan
		Given: exhibitionPlan is part01.ExhibitionPlan@5197848c
		When: getMonthPlanString called with [ID: 420	Name: test, ID: 421	Name: test, ID: 422	Name: test, ID: 423	Name: test, ID: 424	Name: test, ID: 425	Name: test, ID: 426	Name: test, ID: 427	Name: test, ID: 428	Name: test, ID: 429	Name: test]
		Then: output is:
	
May	
		Passed: true
		Expected Value:
	
May	
		Given Value:
	
May	


		Scenario:normal use String month
		Given: exhibitionPlan is part01.ExhibitionPlan@17f052a3
		When: getMonthPlanString called with [ID: 430	Name: test, ID: 431	Name: test, ID: 432	Name: test, ID: 433	Name: test, ID: 434	Name: test, ID: 435	Name: test, ID: 436	Name: test, ID: 437	Name: test, ID: 438	Name: test, ID: 439	Name: test]
		Then: output is:
	Exhibit Hall 1	Exhibit Hall 2	Exhibit Hall 3	
March	test	test	test	
		Passed: true
		Expected Value:
	Exhibit Hall 1	Exhibit Hall 2	Exhibit Hall 3	
March	test	test	test	
		Given Value:
	Exhibit Hall 1	Exhibit Hall 2	Exhibit Hall 3	
March	test	test	test	


		Scenario:normal use String month empty plan
		Given: exhibitionPlan is part01.ExhibitionPlan@2e0fa5d3
		When: getMonthPlanString called with [ID: 440	Name: test, ID: 441	Name: test, ID: 442	Name: test, ID: 443	Name: test, ID: 444	Name: test, ID: 445	Name: test, ID: 446	Name: test, ID: 447	Name: test, ID: 448	Name: test, ID: 449	Name: test]
		Then: output is:
	
March	
		Passed: true
		Expected Value:
	
March	
		Given Value:
	
March	

	Feature Passed: true

	Feature: ExhibitionPlan getExhibitNamesInHall

		Scenario:normal use
		Given: exhibitionPlan is part01.ExhibitionPlan@6267c3bb
		When: getHallPlanString called with [ID: 450	Name: test, ID: 451	Name: test, ID: 452	Name: test, ID: 453	Name: test, ID: 454	Name: test, ID: 455	Name: test, ID: 456	Name: test, ID: 457	Name: test, ID: 458	Name: test, ID: 459	Name: test]
		Then: output is:
	Exhibit Hall 2
January	test
February	test
March	test
April	test
May	test
June	test
July	test
August	test
September	test
October	test
November	test
December	test

		Passed: true
		Expected Value:
	Exhibit Hall 2
January	test
February	test
March	test
April	test
May	test
June	test
July	test
August	test
September	test
October	test
November	test
December	test

		Given Value:
	Exhibit Hall 2
January	test
February	test
March	test
April	test
May	test
June	test
July	test
August	test
September	test
October	test
November	test
December	test



		Scenario:normal use and empty plan
		Given: exhibitionPlan is part01.ExhibitionPlan@7a07c5b4
		When: getHallPlanString called with [ID: 460	Name: test, ID: 461	Name: test, ID: 462	Name: test, ID: 463	Name: test, ID: 464	Name: test, ID: 465	Name: test, ID: 466	Name: test, ID: 467	Name: test, ID: 468	Name: test, ID: 469	Name: test]
		Then: output is:
	Exhibit Hall 2

		Passed: true
		Expected Value:
	Exhibit Hall 2

		Given Value:
	Exhibit Hall 2



		Scenario:normal use
		Given: exhibitionPlan is part01.ExhibitionPlan@26a1ab54
		When: getHallPlanString called with [ID: 470	Name: test, ID: 471	Name: test, ID: 472	Name: test, ID: 473	Name: test, ID: 474	Name: test, ID: 475	Name: test, ID: 476	Name: test, ID: 477	Name: test, ID: 478	Name: test, ID: 479	Name: test]
		Then: output is:
	Exhibit Hall -5

		Passed: true
		Expected Value:
	Exhibit Hall -5

		Given Value:
	Exhibit Hall -5



		Scenario:normal use
		Given: exhibitionPlan is part01.ExhibitionPlan@3d646c37
		When: getHallPlanString called with [ID: 480	Name: test, ID: 481	Name: test, ID: 482	Name: test, ID: 483	Name: test, ID: 484	Name: test, ID: 485	Name: test, ID: 486	Name: test, ID: 487	Name: test, ID: 488	Name: test, ID: 489	Name: test]
		Then: output is:
	Exhibit Hall 5

		Passed: true
		Expected Value:
	Exhibit Hall 5

		Given Value:
	Exhibit Hall 5


	Feature Passed: true

	Feature: ExhibitionPlan addExhibit

		Scenario:normal use int month
		Given: exhibitionPlan is part01.ExhibitionPlan@41cf53f9
		When: addExhbit called with [ID: 490	Name: test, ID: 491	Name: test, ID: 492	Name: test, ID: 493	Name: test, ID: 494	Name: test, ID: 495	Name: test, ID: 496	Name: test, ID: 497	Name: test, ID: 498	Name: test, ID: 499	Name: test]
		AND: 0
		AND: 1
		AND: 494
		Then: output is:
no exception
		Passed: true
		Expected Value:
no exception
		Given Value:
no exception


		Scenario:invalid use int month
		Given: exhibitionPlan is part01.ExhibitionPlan@5a10411
		When: addExhbit called with [ID: 500	Name: test, ID: 501	Name: test, ID: 502	Name: test, ID: 503	Name: test, ID: 504	Name: test, ID: 505	Name: test, ID: 506	Name: test, ID: 507	Name: test, ID: 508	Name: test, ID: 509	Name: test]
		AND: 0
		AND: 1
		AND: 501
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:normal use String month
		Given: exhibitionPlan is part01.ExhibitionPlan@2ef1e4fa
		When: addExhbit called with [ID: 510	Name: test, ID: 511	Name: test, ID: 512	Name: test, ID: 513	Name: test, ID: 514	Name: test, ID: 515	Name: test, ID: 516	Name: test, ID: 517	Name: test, ID: 518	Name: test, ID: 519	Name: test]
		AND: January
		AND: 1
		AND: 514
		Then: output is:
no exception
		Passed: true
		Expected Value:
no exception
		Given Value:
no exception


		Scenario:invalid use String month
		Given: exhibitionPlan is part01.ExhibitionPlan@306a30c7
		When: addExhbit called with [ID: 520	Name: test, ID: 521	Name: test, ID: 522	Name: test, ID: 523	Name: test, ID: 524	Name: test, ID: 525	Name: test, ID: 526	Name: test, ID: 527	Name: test, ID: 528	Name: test, ID: 529	Name: test]
		AND: January
		AND: 1
		AND: 521
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:invalid use String month not a month
		Given: exhibitionPlan is part01.ExhibitionPlan@b81eda8
		When: addExhbit called with [ID: 530	Name: test, ID: 531	Name: test, ID: 532	Name: test, ID: 533	Name: test, ID: 534	Name: test, ID: 535	Name: test, ID: 536	Name: test, ID: 537	Name: test, ID: 538	Name: test, ID: 539	Name: test]
		AND: invalid month name
		AND: 1
		AND: 531
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:invalid use String month is null
		Given: exhibitionPlan is part01.ExhibitionPlan@68de145
		When: addExhbit called with [ID: 540	Name: test, ID: 541	Name: test, ID: 542	Name: test, ID: 543	Name: test, ID: 544	Name: test, ID: 545	Name: test, ID: 546	Name: test, ID: 547	Name: test, ID: 548	Name: test, ID: 549	Name: test]
		AND: null
		AND: 1
		AND: 541
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:normal use Months month
		Given: exhibitionPlan is part01.ExhibitionPlan@27fa135a
		When: addExhbit called with [ID: 550	Name: test, ID: 551	Name: test, ID: 552	Name: test, ID: 553	Name: test, ID: 554	Name: test, ID: 555	Name: test, ID: 556	Name: test, ID: 557	Name: test, ID: 558	Name: test, ID: 559	Name: test]
		AND: March
		AND: 1
		AND: 554
		Then: output is:
no exception
		Passed: true
		Expected Value:
no exception
		Given Value:
no exception


		Scenario:invalid use Months month
		Given: exhibitionPlan is part01.ExhibitionPlan@46f7f36a
		When: addExhbit called with [ID: 560	Name: test, ID: 561	Name: test, ID: 562	Name: test, ID: 563	Name: test, ID: 564	Name: test, ID: 565	Name: test, ID: 566	Name: test, ID: 567	Name: test, ID: 568	Name: test, ID: 569	Name: test]
		AND: January
		AND: 1
		AND: 561
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:invalid use, hall too large
		Given: exhibitionPlan is part01.ExhibitionPlan@5ce65a89
		When: addExhbit called with [ID: 570	Name: test, ID: 571	Name: test, ID: 572	Name: test, ID: 573	Name: test, ID: 574	Name: test, ID: 575	Name: test, ID: 576	Name: test, ID: 577	Name: test, ID: 578	Name: test, ID: 579	Name: test]
		AND: March
		AND: 4
		AND: 574
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:invalid use hall too small
		Given: exhibitionPlan is part01.ExhibitionPlan@25f38edc
		When: addExhbit called with [ID: 580	Name: test, ID: 581	Name: test, ID: 582	Name: test, ID: 583	Name: test, ID: 584	Name: test, ID: 585	Name: test, ID: 586	Name: test, ID: 587	Name: test, ID: 588	Name: test, ID: 589	Name: test]
		AND: March
		AND: 0
		AND: 584
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:invalid use, plan is empty
		Given: exhibitionPlan is part01.ExhibitionPlan@1a86f2f1
		When: addExhbit called with [ID: 590	Name: test, ID: 591	Name: test, ID: 592	Name: test, ID: 593	Name: test, ID: 594	Name: test, ID: 595	Name: test, ID: 596	Name: test, ID: 597	Name: test, ID: 598	Name: test, ID: 599	Name: test]
		AND: 0
		AND: 1
		AND: 594
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown

	Feature Passed: true

	Feature: ExhibitionPlan addExhibitsToMonth

		Scenario:normal use, int Month
		Given: exhibitionPlan is part01.ExhibitionPlan@3eb07fd3
		When: addExhbitsToMonth called with [604, 605, 606]
		AND: 0
		Then: output is:
no exception
		Passed: true
		Expected Value:
no exception
		Given Value:
no exception


		Scenario:invalid Use with int month, month too large
		Given: exhibitionPlan is part01.ExhibitionPlan@506c589e
		When: addExhbitsToMonth called with [614, 615, 616]
		AND: 12
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:invalid Use with int month, month too small
		Given: exhibitionPlan is part01.ExhibitionPlan@69d0a921
		When: addExhbitsToMonth called with [624, 625, 626]
		AND: -5
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:valid Use with String month
		Given: exhibitionPlan is part01.ExhibitionPlan@446cdf90
		When: addExhbitsToMonth called with [634, 635, 636]
		AND: May
		Then: output is:
no exception
		Passed: true
		Expected Value:
no exception
		Given Value:
no exception


		Scenario:invalid Use with String month, not a month
		Given: exhibitionPlan is part01.ExhibitionPlan@799f7e29
		When: addExhbitsToMonth called with [644, 645, 646]
		AND: not a month
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:invalid Use with String month, null
		Given: exhibitionPlan is part01.ExhibitionPlan@4b85612c
		When: addExhbitsToMonth called with [654, 655, 656]
		AND: null
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:valid Use with Months month
		Given: exhibitionPlan is part01.ExhibitionPlan@277050dc
		When: addExhbitsToMonth called with [664, 665, 666]
		AND: August
		Then: output is:
no exception
		Passed: true
		Expected Value:
no exception
		Given Value:
no exception

	Feature Passed: true

	Feature: ExhibitionPlan addExhibitsToHall

		Scenario:valid Use with Months month
		Given: exhibitionPlan is part01.ExhibitionPlan@5c29bfd
		When: addExhbitsToMonth called with [674, 675, 676, 677, 678, 679, 670, 671, 672, 673, 675, 676]
		AND: 2
		Then: output is:
no exception
		Passed: true
		Expected Value:
no exception
		Given Value:
no exception


		Scenario:valid Use with Months month
		Given: exhibitionPlan is part01.ExhibitionPlan@7aec35a
		When: addExhbitsToMonth called with [684, 685, 686, 687, 688, 689, 680, 681, 682, 683, 685, 686]
		AND: 0
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown


		Scenario:valid Use with Months month
		Given: exhibitionPlan is part01.ExhibitionPlan@67424e82
		When: addExhbitsToMonth called with [694, 695, 696, 697, 698, 699, 690, 691, 692, 693, 695, 696]
		AND: 4
		Then: output is:
exception thrown
		Passed: true
		Expected Value:
exception thrown
		Given Value:
exception thrown

	Feature Passed: true

All Features Passed: true

Class in Test: ArtifactManagement

	Feature: ArtifactMangement default constructor

		Scenario:Default Constructor Array Property
		When: new ArtifactManagement() called
		Then: output of getArtifactArray() is:
[]
		Passed: true
		Expected Value:
[Lpart01.Artifact;@579bb367
		Given Value:
[Lpart01.Artifact;@1de0aca6


		Scenario:Default Constructor ArrayList Property
		When: new ArtifactManagement() called
		Then: output of getArtifacts() is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ArtifactMangement default constructor

		Scenario:Constructor Array Property
		When: new ArtifactManagement() called with [ID: 0,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 1,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 2,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 3,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 4,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		Then: output of getArtifactArray() is:
[{ID: 0,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 1,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 2,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 3,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 4,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}]
		Passed: true
		Expected Value:
[Lpart01.Artifact;@255316f2
		Given Value:
[Lpart01.Artifact;@41906a77


		Scenario:constructor ArrayList Property
		When: new ArtifactManagement() called with [ID: 5,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 6,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 7,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 8,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 9,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		Then: output of getArtifacts() is:
[ID: 5,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 6,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 7,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 8,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 9,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		Passed: true
		Expected Value:
[ID: 5,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 6,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 7,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 8,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 9,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		Given Value:
[ID: 5,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 6,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 7,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 8,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 9,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]


		Scenario:constructor with null in ArrayList
		When: new ArtifactManagement() called with [null, null, null, null, null]
		Then: output of getArtifacts() is:
artifacts cannot contain null
		Passed: true
		Expected Value:
artifacts cannot contain null
		Given Value:
artifacts cannot contain null

	Feature Passed: true

	Feature: ArtifactManagement getArtifactArrayLength

		Scenario:normal use
		Given: testArtifactManagement is [ID: 10,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 11,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 12,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 13,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 14,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 15,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 16,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 17,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 18,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 19,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: getArtifactArrayLength called
		Then: output is:
10
		Passed: true
		Expected Value:
10
		Given Value:
10


		Scenario:normal use
		Given: testArtifactManagement is []
		When: getArtifactArrayLength called
		Then: output is:
0
		Passed: true
		Expected Value:
0
		Given Value:
0

	Feature Passed: true

	Feature: ArtifactManagement getArtifactID

		Scenario:normal use
		Given: testArtifactManagement is [ID: 20,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 21,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 22,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 23,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 24,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 25,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 26,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 27,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 28,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 29,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: getArtifactID called with 0
		Then: output is:
20
		Passed: true
		Expected Value:
20
		Given Value:
20


		Scenario:empty manager
		Given: testArtifactManagement is []
		When: getArtifactID called with 0
		Then: output is:
Artifact Choice Out of Range
		Passed: true
		Expected Value:
Artifact Choice Out of Range
		Given Value:
Artifact Choice Out of Range


		Scenario:negative index
		Given: testArtifactManagement is [ID: 30,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 31,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 32,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 33,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 34,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 35,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 36,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 37,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 38,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 39,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: getArtifactID called with -1
		Then: output is:
Artifact Choice Out of Range
		Passed: true
		Expected Value:
Artifact Choice Out of Range
		Given Value:
Artifact Choice Out of Range


		Scenario:index out of range
		Given: testArtifactManagement is [ID: 40,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 41,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 42,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 43,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 44,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 45,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 46,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 47,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 48,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 49,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: getArtifactID called with 11
		Then: output is:
Artifact Choice Out of Range
		Passed: true
		Expected Value:
Artifact Choice Out of Range
		Given Value:
Artifact Choice Out of Range

	Feature Passed: true

	Feature: ArtifactManagement addArtifact

		Scenario:normal use
		Given: testArtifactManagement is [ID: 50,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 51,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 52,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 53,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 54,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 55,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 56,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 57,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 58,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 59,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 60,	Name: add Artifact,	Type: new Artifact,	Engagement Time: 6 minutes]
		When: addArtifact called with add Artifact
		And: new Artifact
		And: 6
		Then: output is:
true
		Passed: true
		Expected Value:
true
		Given Value:
true


		Scenario:Zero engagement time
		Given: testArtifactManagement is [ID: 61,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 62,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 63,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 64,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 65,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 66,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 67,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 68,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 69,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 70,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: addArtifact called with add Artifact
		And: new Artifact
		And: 0
		Then: output is:
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario:Negative enagagement time
		Given: testArtifactManagement is [ID: 71,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 72,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 73,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 74,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 75,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 76,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 77,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 78,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 79,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 80,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: addArtifact called with add Artifact
		And: new Artifact
		And: -1
		Then: output is:
false
		Passed: true
		Expected Value:
false
		Given Value:
false

	Feature Passed: true

	Feature: ArtifactManagement updateArtifact

		Scenario:normal use
		Given: testArtifactManagement is [ID: 81,	Name: add Artifact,	Type: new Artifact,	Engagement Time: 6 minutes, ID: 82,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 83,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 84,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 85,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 86,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 87,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 88,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 89,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 90,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifact called with 0
		And: add Artifact
		And: new Artifact
		And: 6
		Then: output is:
true
		Passed: true
		Expected Value:
true
		Given Value:
true


		Scenario:Artifact Choice is negative
		Given: testArtifactManagement is [ID: 91,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 92,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 93,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 94,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 95,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 96,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 97,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 98,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 99,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 100,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifact called with -1
		And: add Artifact
		And: new Artifact
		And: 6
		Then: output is:
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario:Artifact Choice is greater than artifact no
		Given: testArtifactManagement is [ID: 101,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 102,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 103,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 104,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 105,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 106,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 107,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 108,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 109,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 110,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifact called with 11
		And: add Artifact
		And: new Artifact
		And: 6
		Then: output is:
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario:Zero engagement time
		Given: testArtifactManagement is [ID: 111,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 112,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 113,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 114,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 115,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 116,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 117,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 118,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 119,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 120,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifact called with 0
		And: add Artifact
		And: new Artifact
		And: 0
		Then: output is:
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario:Negative enagagement time
		Given: testArtifactManagement is [ID: 121,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 122,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 123,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 124,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 125,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 126,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 127,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 128,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 129,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 130,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifact called with 0
		And: add Artifact
		And: new Artifact
		And: -1
		Then: output is:
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario:Don't Update anything
		Given: testArtifactManagement is [ID: 131,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 132,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 133,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 134,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 135,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 136,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 137,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 138,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 139,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 140,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifact called with 0
		And: 
		And: 
		And: 
		Then: output of getArtifactString is: 
ID: 131,	Name: test,	Type: artifact,	Engagement Time: 4 minutes
		Passed: true
		Expected Value:
ID: 131,	Name: test,	Type: artifact,	Engagement Time: 4 minutes
		Given Value:
ID: 131,	Name: test,	Type: artifact,	Engagement Time: 4 minutes


		Scenario:update name
		Given: testArtifactManagement is [ID: 141,	Name: new name,Type: artifact,	Engagement Time: 4 minutes, ID: 142,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 143,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 144,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 145,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 146,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 147,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 148,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 149,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 150,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifact called with 0
		And: new name
		And: 
		And: 
		Then: output of getArtifactString is: 
ID: 141,	Name: new name,	Type: artifact,	Engagement Time: 4 minutes
		Passed: true
		Expected Value:
ID: 141,	Name: new name,	Type: artifact,	Engagement Time: 4 minutes
		Given Value:
ID: 141,	Name: new name,	Type: artifact,	Engagement Time: 4 minutes


		Scenario:update type
		Given: testArtifactManagement is [ID: 151,	Name: test,	Type: new type,	Engagement Time: 4 minutes, ID: 152,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 153,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 154,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 155,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 156,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 157,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 158,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 159,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 160,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifact called with 0
		And: 
		And: new type
		And: 
		Then: output of getArtifactString is: 
ID: 151,	Name: test,	Type: new type,	Engagement Time: 4 minutes
		Passed: true
		Expected Value:
ID: 151,	Name: test,	Type: new type,	Engagement Time: 4 minutes
		Given Value:
ID: 151,	Name: test,	Type: new type,	Engagement Time: 4 minutes


		Scenario:update time
		Given: testArtifactManagement is [ID: 161,	Name: test,	Type: artifact,	Engagement Time: 9 minutes, ID: 162,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 163,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 164,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 165,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 166,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 167,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 168,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 169,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 170,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifact called with 0
		And: 
		And: 
		And: 9
		Then: output of getArtifactString is: 
ID: 161,	Name: test,	Type: artifact,	Engagement Time: 9 minutes
		Passed: true
		Expected Value:
ID: 161,	Name: test,	Type: artifact,	Engagement Time: 9 minutes
		Given Value:
ID: 161,	Name: test,	Type: artifact,	Engagement Time: 9 minutes

	Feature Passed: true

	Feature: ArtifactManagement updateArtifactByID

		Scenario:normal use
		Given: testArtifactManagement is [ID: 171,	Name: add Artifact,	Type: new Artifact,	Engagement Time: 6 minutes, ID: 172,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 173,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 174,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 175,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 176,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 177,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 178,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 179,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 180,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifactByID called with add Artifact
		And: new Artifact
		And: 6
		And: 171
		Then: output is: 
true
		Passed: true
		Expected Value:
true
		Given Value:
true


			Scenario:Artifact Choice is negative
		Given: testArtifactManagement is [ID: 181,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 182,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 183,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 184,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 185,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 186,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 187,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 188,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 189,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 190,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifactByID called with add Artifact
		And: new Artifact
		And: 6
		And: 180
		Then: output is: 
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario:Zero engagement time
		Given: testArtifactManagement is [ID: 191,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 192,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 193,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 194,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 195,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 196,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 197,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 198,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 199,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 200,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifactByID called with add Artifact
		And: new Artifact
		And: 0
		And: 191
		Then: output is: 
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario:Negative enagagement time
		Given: testArtifactManagement is [ID: 201,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 202,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 203,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 204,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 205,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 206,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 207,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 208,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 209,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 210,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifactByID called with add Artifact
		And: new Artifact
		And: -1
		And: 201
		Then: output is: 
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario:Don't Update anything
		Given: testArtifactManagement is [ID: 211,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 212,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 213,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 214,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 215,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 216,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 217,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 218,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 219,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 220,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifactByID called with 
		And: 
		And: 
		And: 211
		Then: output of getArtifactString with 0is: 
ID: 211,	Name: test,	Type: artifact,	Engagement Time: 4 minutes
		Passed: true
		Expected Value:
ID: 211,	Name: test,	Type: artifact,	Engagement Time: 4 minutes
		Given Value:
ID: 211,	Name: test,	Type: artifact,	Engagement Time: 4 minutes


		Scenario:update name
		Given: testArtifactManagement is [ID: 221,	Name: new name,Type: artifact,	Engagement Time: 4 minutes, ID: 222,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 223,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 224,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 225,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 226,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 227,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 228,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 229,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 230,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifactByID called with new name
		And: 
		And: 
		And: 221
		Then: output of getArtifactString with 0is: 
ID: 221,	Name: new name,	Type: artifact,	Engagement Time: 4 minutes
		Passed: true
		Expected Value:
ID: 221,	Name: new name,	Type: artifact,	Engagement Time: 4 minutes
		Given Value:
ID: 221,	Name: new name,	Type: artifact,	Engagement Time: 4 minutes


		Scenario:update type
		Given: testArtifactManagement is [ID: 231,	Name: test,	Type: new type,	Engagement Time: 4 minutes, ID: 232,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 233,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 234,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 235,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 236,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 237,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 238,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 239,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 240,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifactByID called with 
		And: new type
		And: 
		And: 231
		Then: output of getArtifactString with 0is: 
ID: 231,	Name: test,	Type: new type,	Engagement Time: 4 minutes
		Passed: true
		Expected Value:
ID: 231,	Name: test,	Type: new type,	Engagement Time: 4 minutes
		Given Value:
ID: 231,	Name: test,	Type: new type,	Engagement Time: 4 minutes


		Scenario:update time
		Given: testArtifactManagement is [ID: 241,	Name: test,	Type: artifact,	Engagement Time: 9 minutes, ID: 242,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 243,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 244,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 245,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 246,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 247,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 248,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 249,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 250,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: updateArtifactByID called with 
		And: 
		And: 9
		And: 241
		Then: output of getArtifactString with 0is: 
ID: 241,	Name: test,	Type: artifact,	Engagement Time: 9 minutes
		Passed: true
		Expected Value:
ID: 241,	Name: test,	Type: artifact,	Engagement Time: 9 minutes
		Given Value:
ID: 241,	Name: test,	Type: artifact,	Engagement Time: 9 minutes

	Feature Passed: true

	Feature ArtifactManagement getArtifactString

		Scenario:normal use
		Given: testArtifactManagement is [ID: 251,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 252,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 253,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 254,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 255,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 256,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 257,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 258,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 259,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 260,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: getArtifactString called with 0
		Then: output of getArtifactString is: 
ID: 251,	Name: test,	Type: artifact,	Engagement Time: 4 minutes
		Passed: true
		Expected Value:
ID: 251,	Name: test,	Type: artifact,	Engagement Time: 4 minutes
		Given Value:
ID: 251,	Name: test,	Type: artifact,	Engagement Time: 4 minutes


		Scenario:artifactChoice is negative
		Given: testArtifactManagement is [ID: 261,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 262,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 263,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 264,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 265,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 266,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 267,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 268,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 269,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 270,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: getArtifactString called with -1
		Then: output of getArtifactString is: 
Not A Valid Artifact Choice
		Passed: true
		Expected Value:
Not A Valid Artifact Choice
		Given Value:
Not A Valid Artifact Choice


		Scenario:artifactChoice exceeds last artifact
		Given: testArtifactManagement is [ID: 271,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 272,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 273,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 274,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 275,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 276,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 277,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 278,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 279,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 280,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: getArtifactString called with 10
		Then: output of getArtifactString is: 
Not A Valid Artifact Choice
		Passed: true
		Expected Value:
Not A Valid Artifact Choice
		Given Value:
Not A Valid Artifact Choice

	Feature Passed: true

	Feature: ArtifactManagement getArtifactsMenu

		Scenario:normal use
		Given: testArtifactManagement is [ID: 281,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 282,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 283,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 284,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 285,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 286,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 287,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 288,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 289,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 290,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: getArtifactsMenu called
		Then: display of getUserChoice is: 
Artifacts
+++++++++
1. test
2. test
3. test
4. test
5. test
6. test
7. test
8. test
9. test
10. test
11. Search
12. Clear
13. Quit

Enter Selection:
		Passed: true
		Expected Value:
Artifacts
+++++++++
1. test
2. test
3. test
4. test
5. test
6. test
7. test
8. test
9. test
10. test
11. Search
12. Clear
13. Quit

Enter Selection:
		Given Value:
Artifacts
+++++++++
1. test
2. test
3. test
4. test
5. test
6. test
7. test
8. test
9. test
10. test
11. Search
12. Clear
13. Quit

Enter Selection: 


		Scenario:empty artifactManagement use
		Given: testArtifactManagement is []
		When: getArtifactsMenu called
		Then: display of getUserChoice is: 
Artifacts
+++++++++
1. Search
2. Clear
3. Quit

Enter Selection:
		Passed: true
		Expected Value:
Artifacts
+++++++++
1. Search
2. Clear
3. Quit

Enter Selection:
		Given Value:
Artifacts
+++++++++
1. Search
2. Clear
3. Quit

Enter Selection: 

	Feature Passed: true

	Feature: ArtifactManagement artifactsToArray

		Scenario:normal use
		Given: testArtifactManagement is [ID: 291,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 292,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 293,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 294,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 295,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: artifactsToArray called
		Then: output is: 
[{ID: 291,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 292,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 293,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 294,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 295,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}]
		Passed: true
		Expected Value:
[{ID: 291,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 292,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 293,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 294,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 295,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}]
		Given Value:
[{ID: 291,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 292,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 293,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 294,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 295,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}]


		Scenario:empty ArtifactManagement
		Given: testArtifactManagement is []
		When: artifactsToArray called
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:normal use of static method
		Given: testArtifactManagement is [ID: 296,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 297,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 298,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 299,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 300,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: artifactsToArray called
		Then: output is: 
[{ID: 296,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 297,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 298,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 299,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 300,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}]
		Passed: true
E		xpected Value:
[{ID: 296,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 297,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 298,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 299,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 300,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}]
		Given Value:
[{ID: 296,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 297,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 298,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 299,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}, {ID: 300,	Name: test,	Type: artifact,	Engagement Time: 4 minutes}]


		Scenario:empty array list with static method
		Given: testArtifactManagement is []
		When: artifactsToArray called
		Then: output is: 
[]
		Passed: true
E		xpected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ArtifactManagement artifactArrayToNameArray

		Scenario:normal use
		Given: testArtifactManagement is [ID: 301,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 302,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 303,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 304,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 305,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 306,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 307,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 308,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 309,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 310,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		When: artifactsToArray called 
		Then: output is: 
["test", "test", "test", "test", "test", "test", "test", "test", "test", "test"]
		Passed: true
		Expected Value:
["test", "test", "test", "test", "test", "test", "test", "test", "test", "test"]
		Given Value:
["test", "test", "test", "test", "test", "test", "test", "test", "test", "test"]


		Scenario:empty array
		Given: testArtifactManagement is []
		When: artifactsToArray called 
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ArtifactManagement sortArtifactArray

		Scenario:normal use
		Given: testArtifactManagement is [ID: 311,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 312,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 313,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 314,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 315,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: sortArtifactsArray called 
		Then: output of getArtifactArray is: 
[{ID: 311,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}, {ID: 312,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes}, {ID: 313,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 314,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}, {ID: 315,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes}]
		Passed: true
		Expected Value:
[{ID: 311,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}, {ID: 312,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes}, {ID: 313,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 314,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}, {ID: 315,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes}]
		Given Value:
[{ID: 311,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}, {ID: 312,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes}, {ID: 313,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 314,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}, {ID: 315,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes}]


		Scenario:normal use, empty array
		Given: testArtifactManagement is []
		When: sortArtifactsArray called 
		Then: output of getArtifactArray is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ArtifactManagement searchArtifacts

		Scenario:normal use, criteria 1, search id
		Given: testArtifactManagement is [ID: 316,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 317,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 318,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 319,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 320,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: searchArtifacts called with 1
		And: 320
		Then: output of getArtifactArray is: 
[{ID: 320,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes}]
		Passed: true
		Expected Value:
[{ID: 320,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes}]
		Given Value:
[{ID: 320,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes}]


		Scenario:normal use, criteria 2, search name
		Given: testArtifactManagement is [ID: 321,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 322,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 323,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 324,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 325,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: searchArtifacts called with 2
		And: 1
		Then: output of getArtifactArray is: 
[{ID: 321,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}]
		Passed: true
		Expected Value:
[{ID: 321,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}]
		Given Value:
[{ID: 321,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}]


		Scenario:normal use, criteria 3, search type
		Given: testArtifactManagement is [ID: 326,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 327,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 328,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 329,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 330,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: searchArtifacts called with 3
		And: 3
		Then: output of getArtifactArray is: 
[{ID: 328,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}]
		Passed: true
		Expected Value:
[{ID: 328,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}]
		Given Value:
[{ID: 328,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}]


		Scenario:normal use, criteria 4, search time
		Given: testArtifactManagement is [ID: 331,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 332,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 333,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 334,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 335,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: searchArtifacts called with 4
		And: 8
		Then: output of getArtifactArray is: 
[{ID: 334,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}]
		Passed: true
		Expected Value:
[{ID: 334,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}]
		Given Value:
[{ID: 334,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}]


		Scenario:normal use, criteria 5, no search
		Given: testArtifactManagement is [ID: 336,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 337,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 338,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 339,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 340,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: searchArtifacts called with 5
		And: 1
		Then: output of getArtifactArray is: 
[{ID: 336,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}, {ID: 337,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes}, {ID: 338,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 339,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}, {ID: 340,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes}]
		Passed: true
		Expected Value:
[{ID: 336,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}, {ID: 337,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes}, {ID: 338,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 339,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}, {ID: 340,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes}]
		Given Value:
[{ID: 336,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}, {ID: 337,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes}, {ID: 338,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 339,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}, {ID: 340,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes}]


		Scenario:normal use, criteria 0,  no search
		Given: testArtifactManagement is [ID: 341,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 342,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 343,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 344,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 345,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: searchArtifacts called with 0
		And: 1
		Then: output of getArtifactArray is: 
[{ID: 341,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}, {ID: 342,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes}, {ID: 343,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 344,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}, {ID: 345,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes}]
		Passed: true
		Expected Value:
[{ID: 341,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}, {ID: 342,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes}, {ID: 343,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 344,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}, {ID: 345,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes}]
		Given Value:
[{ID: 341,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}, {ID: 342,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes}, {ID: 343,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 344,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}, {ID: 345,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes}]


		Scenario:normal use, criteria -1,  no search
		Given: testArtifactManagement is [ID: 346,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 347,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 348,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 349,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 350,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: searchArtifacts called with -1
		And: 1
		Then: output of getArtifactArray is: 
[{ID: 346,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}, {ID: 347,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes}, {ID: 348,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 349,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}, {ID: 350,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes}]
		Passed: true
		Expected Value:
[{ID: 346,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}, {ID: 347,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes}, {ID: 348,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 349,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}, {ID: 350,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes}]
		Given Value:
[{ID: 346,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}, {ID: 347,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes}, {ID: 348,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 349,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}, {ID: 350,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes}]

	Feature Passed: true

	Feature: ArtifactManagement  removeArtifact

		Scenario:normal use
		Given: testArtifactManagement is [ID: 351,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 352,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 353,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 354,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes]
		When: removeArtifact called with 355
		Then: output of getArtifacts is: 
[ID: 351,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 352,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 353,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 354,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes]
		Passed: true
		Expected Value:
[ID: 351,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 352,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 353,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 354,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes]
		Given Value:
[ID: 351,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 352,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 353,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 354,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes]


		Scenario:out of range choice
		Given: testArtifactManagement is [ID: 356,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 357,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 358,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 359,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 360,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: removeArtifact called with -1
		Then: output of getArtifacts is: 
[ID: 356,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 357,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 358,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 359,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 360,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		Passed: true
		Expected Value:
[ID: 356,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 357,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 358,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 359,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 360,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		Given Value:
[ID: 356,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 357,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 358,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 359,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 360,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]


		Scenario:out of range choice
		Given: testArtifactManagement is [ID: 361,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 362,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 363,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 364,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 365,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: removeArtifact called with 375
		Then: output of getArtifacts is: 
[ID: 361,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 362,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 363,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 364,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 365,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		Passed: true
		Expected Value:
[ID: 361,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 362,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 363,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 364,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 365,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		Given Value:
[ID: 361,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 362,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 363,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 364,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 365,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]


		Scenario:empty artifacts
		Given: testArtifactManagement is []
		When: removeArtifact called with 365
		Then: output of getArtifacts is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ArtifactManagement getArtifactsMenu

		Scenario:normal use
		Given: testArtifactManagement is [ID: 366,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 367,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 368,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 369,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 370,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: getArtifactsMenu called
		Then: display of getUserChoice is: 
Artifacts
+++++++++
1. test1
2. test2
3. test3
4. test4
5. test5
6. Search
7. Clear
8. Quit

Enter Selection:
		Passed: true
		Expected Value:
Artifacts
+++++++++
1. test1
2. test2
3. test3
4. test4
5. test5
6. Search
7. Clear
8. Quit

Enter Selection:
		Given Value:
Artifacts
+++++++++
1. test1
2. test2
3. test3
4. test4
5. test5
6. Search
7. Clear
8. Quit

Enter Selection: 


		Scenario:empty artifactManagement use
		Given: testArtifactManagement is []
		When: getArtifactsMenu called
		Then: display of getUserChoice is: 
Artifacts
+++++++++
1. Search
2. Clear
3. Quit

Enter Selection:
		Passed: true
		Expected Value:
Artifacts
+++++++++
1. Search
2. Clear
3. Quit

Enter Selection:
		Given Value:
Artifacts
+++++++++
1. Search
2. Clear
3. Quit

Enter Selection: 

	Feature Passed: true

	Feature: ArtifactManagement getExhibitArtifacts

		Scenario:normal use
		Given: testArtifactManagement is [ID: 371,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 372,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 373,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 374,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 375,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: getExhibitArtifacts called with [371, 372, 373, 373, 374]
		Then: output is: 
[{ID: 371,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}, {ID: 372,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes}, {ID: 373,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 373,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 374,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}]
		Passed: true
		Expected Value:
[{ID: 371,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}, {ID: 372,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes}, {ID: 373,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 373,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 374,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}]
		Given Value:
[{ID: 371,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes}, {ID: 372,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes}, {ID: 373,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 373,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes}, {ID: 374,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes}]


		Scenario:empty list of artifacts
		Given: testArtifactManagement is [ID: 376,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 377,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 378,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 379,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 380,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: getExhibitArtifacts called with []
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:empty list of artifacts
		Given: testArtifactManagement is []
		When: getExhibitArtifacts called with [381, 382, 383, 383, 384]
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ArtifactManagement findArtifact

		Scenario:normal use
		Given: testArtifactManagement is [ID: 381,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 382,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 383,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 384,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 385,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: findArtifact called with 381
		Then: output is: 
ID: 381,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes
		Passed: true
		Expected Value:
ID: 381,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes
		Given Value:
ID: 381,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes


		Scenario:id not in list
		Given: testArtifactManagement is [ID: 386,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 387,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 388,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 389,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 390,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: findArtifact called with 385
		Then: output is: 
No matching id in list
		Passed: true
		Expected Value:
No matching id in list
		Given Value:
No matching id in list


		Scenario:empty list of artifacts
		Given: testArtifactManagement is []
		When: findArtifact called with 391
		Then: output is: 
No matching id in list
		Passed: true
		Expected Value:
No matching id in list
		Given Value:
No matching id in list

	Feature Passed: true

	Feature: ArtifactManagement getArtifactNames

		Scenario:normal use
		Given: testArtifactManagement is [ID: 391,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 392,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 393,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 394,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 395,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: getArtifactNames called with [391, 392, 393, 393, 394]
		Then: output is: 
["test1", "test2", "test3", "test3", "test4"]
		Passed: true
		Expected Value:
["test1", "test2", "test3", "test3", "test4"]
		Given Value:
["test1", "test2", "test3", "test3", "test4"]


		Scenario:empty list of artifacts
		Given: testArtifactManagement is [ID: 396,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 397,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 398,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 399,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 400,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: getArtifactNames called with []
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:empty list of artifacts
		Given: testArtifactManagement is []
		When: getArtifactNames called with [401, 402, 403, 403, 404]
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ArtifactManagement getExhibitEngagmentTime

		Scenario:normal use
		Given: testArtifactManagement is [ID: 401,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 402,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 403,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 404,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 405,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: getExhibitEngagmentTime called with [401, 402, 403, 403, 404]
		Then: output is: 
33
		Passed: true
		Expected Value:
33
		Given Value:
33


		Scenario:empty list of artifacts
		Given: testArtifactManagement is [ID: 406,	Name: test1,	Type: artifact1,	Engagement Time: 5 minutes, ID: 407,	Name: test2,	Type: artifact2,	Engagement Time: 6 minutes, ID: 408,	Name: test3,	Type: artifact3,	Engagement Time: 7 minutes, ID: 409,	Name: test4,	Type: artifact4,	Engagement Time: 8 minutes, ID: 410,	Name: test5,	Type: artifact5,	Engagement Time: 9 minutes]
		When: getExhibitEngagmentTime called with []
		Then: output is: 
0
		Passed: true
		Expected Value:
0
		Given Value:
0


		Scenario:empty list of artifacts
		Given: testArtifactManagement is []
		When: getExhibitEngagmentTime called with [411, 412, 413, 413, 414]
		Then: output is: 
0
		Passed: true
		Expected Value:
0
		Given Value:
0

	Feature Passed: true

All Features Passed: true

Class in Test: ExhibitManagement

	Feature: ExhibitManagment default constructor

		Scenario:Default Constructor Array Property
		When: new ExhibitManagement() called
		Then: output of getExhibitArray() is:
[]
		Passed: true
		Expected Value:
[Lpart01.Exhibit;@2cdf8d8a
		Given Value:
[Lpart01.Exhibit;@30946e09


		Scenario:Default Constructor ArrayList Property
		When: new ExhibitManagement() called
		Then: output of getExhibits() is:
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ArtifactMangement default constructor

		Scenario:Constructor Array Property
		When: new ExhibitManagement() called with [ID: 0	Name: test, ID: 1	Name: test, ID: 2	Name: test, ID: 3	Name: test, ID: 4	Name: test]
		Then: output of getExhibitArray() is:
[{ID: 0	Name: test}, {ID: 1	Name: test}, {ID: 2	Name: test}, {ID: 3	Name: test}, {ID: 4	Name: test}]
		Passed: true
		Expected Value:
[Lpart01.Exhibit;@5cb0d902
		Given Value:
[Lpart01.Exhibit;@46fbb2c1


		Scenario:constructor ArrayList Property
		When: new ExhibitManagement() called with [ID: 5	Name: test, ID: 6	Name: test, ID: 7	Name: test, ID: 8	Name: test, ID: 9	Name: test]
		Then: output of getExhibits() is:
[ID: 5	Name: test, ID: 6	Name: test, ID: 7	Name: test, ID: 8	Name: test, ID: 9	Name: test]
		Passed: true
		Expected Value:
[ID: 5	Name: test, ID: 6	Name: test, ID: 7	Name: test, ID: 8	Name: test, ID: 9	Name: test]
		Given Value:
[ID: 5	Name: test, ID: 6	Name: test, ID: 7	Name: test, ID: 8	Name: test, ID: 9	Name: test]


		Scenario:constructor with null in ArrayList
		When: new ExhibitManagement() called with [null, null, null, null, null]
		Then: output of getExhibits() is:
exhibits cannot contain null
		Passed: true
		Expected Value:
exhibits cannot contain null
		Given Value:
exhibits cannot contain null

	Feature Passed: true

	Feature: ExhibitManagement getExhibitArrayLength

		Scenario:normal use
		Given: testArtifactManagement is [ID: 10	Name: test, ID: 11	Name: test, ID: 12	Name: test, ID: 13	Name: test, ID: 14	Name: test, ID: 15	Name: test, ID: 16	Name: test, ID: 17	Name: test, ID: 18	Name: test, ID: 19	Name: test]
		When: getArtifactArrayLength called
		Then: output is:
10
		Passed: true
		Expected Value:
10
		Given Value:
10


		Scenario:normal use
		Given: testArtifactManagement is []
		When: getArtifactArrayLength called
		Then: output is:
0
		Passed: true
		Expected Value:
0
		Given Value:
0

	Feature Passed: true

	Feature: ExhibitManagement addExhibit

		Scenario:normal use
		Given: testExhibitManagement is add Artifact
		When: addExhibit called with add Artifact
		And: [1, 2, 3]
		And: [a, b, c]
		Then: output is:
true
		Passed: true
		Expected Value:
true
		Given Value:
true


		Scenario:Route is longer
		Given: testExhibitManagement is add Artifact
		When: addExhibit called with add Artifact
		And: [1, 2]
		And: [a, b, c]
		Then: output is:
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario:artifacts is longer
		Given: testExhibitManagement is add Artifact
		When: addExhibit called with add Artifact
		And: [1, 2, 3]
		And: [a, b]
		Then: output is:
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario:route and artifacts contain null
		Given: testExhibitManagement is add Artifact
		When: addExhibit called with add Artifact
		And: [1, null, 3]
		And: [a, null, c]
		Then: output is:
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario:route and artifacts contain null
		Given: testExhibitManagement is add Artifact
		When: addExhibit called with add Artifact
		And: null
		And: null
		Then: output is:
false
		Passed: true
		Expected Value:
false
		Given Value:
false

	Feature Passed: true

	Feature: ExhibitManagement exhibitsMenu

		Scenario:normal use
		Given: testExhibitManagement is [ID: 71	Name: test, ID: 72	Name: test, ID: 73	Name: test, ID: 74	Name: test, ID: 75	Name: test, ID: 76	Name: test, ID: 77	Name: test, ID: 78	Name: test, ID: 79	Name: test, ID: 80	Name: test]
		When: exhibitsMenu called
		Then: display of getUserChoice is: 
Exhibits
++++++++
1. test
2. test
3. test
4. test
5. test
6. test
7. test
8. test
9. test
10. test
11. Search
12. Clear
13. Quit

Enter Selection:
		Passed: true
		Expected Value:
Exhibits
++++++++
1. test
2. test
3. test
4. test
5. test
6. test
7. test
8. test
9. test
10. test
11. Search
12. Clear
13. Quit

Enter Selection:
		Given Value:
Exhibits
++++++++
1. test
2. test
3. test
4. test
5. test
6. test
7. test
8. test
9. test
10. test
11. Search
12. Clear
13. Quit

Enter Selection: 


		Scenario:empty exhibitManagement use
		Given: testExhibitManagement is []
		When: exhibitsMenu called
		Then: display of getUserChoice is: 
Exhibits
++++++++
1. Search
2. Clear
3. Quit

Enter Selection:
		Passed: true
		Expected Value:
Exhibits
++++++++
1. Search
2. Clear
3. Quit

Enter Selection:
		Given Value:
Exhibits
++++++++
1. Search
2. Clear
3. Quit

Enter Selection: 

	Feature Passed: true

	Feature: ExhibitManagement exhibitsToArray

		Scenario:normal use
		Given: testExhibitManagement is [ID: 81	Name: test, ID: 82	Name: test, ID: 83	Name: test, ID: 84	Name: test, ID: 85	Name: test]
		When: exhibitsToArray called
		Then: output is: 
[{ID: 81	Name: test}, {ID: 82	Name: test}, {ID: 83	Name: test}, {ID: 84	Name: test}, {ID: 85	Name: test}]
		Passed: true
		Expected Value:
[{ID: 81	Name: test}, {ID: 82	Name: test}, {ID: 83	Name: test}, {ID: 84	Name: test}, {ID: 85	Name: test}]
		Given Value:
[{ID: 81	Name: test}, {ID: 82	Name: test}, {ID: 83	Name: test}, {ID: 84	Name: test}, {ID: 85	Name: test}]


		Scenario:empty ArtifactManagement
		Given: testExhibitManagement is []
		When: exhibitsToArray called
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:normal use of static method
		Given: testExhibitManagement is [ID: 86	Name: test, ID: 87	Name: test, ID: 88	Name: test, ID: 89	Name: test, ID: 90	Name: test]
		When: exhibitsToArray called
		Then: output is: 
[{ID: 86	Name: test}, {ID: 87	Name: test}, {ID: 88	Name: test}, {ID: 89	Name: test}, {ID: 90	Name: test}]
		Passed: true
		Expected Value:
[{ID: 86	Name: test}, {ID: 87	Name: test}, {ID: 88	Name: test}, {ID: 89	Name: test}, {ID: 90	Name: test}]
		Given Value:
[{ID: 86	Name: test}, {ID: 87	Name: test}, {ID: 88	Name: test}, {ID: 89	Name: test}, {ID: 90	Name: test}]


		Scenario:empty array list with static method
		Given: testExhibitManagement is []
		When: exhibitsToArray called
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ExhibitManagement exhibitArrayToNameArray

		Scenario:normal use
		Given: testExhibitManagement is [ID: 91	Name: test, ID: 92	Name: test, ID: 93	Name: test, ID: 94	Name: test, ID: 95	Name: test]
		When: artifactsToArray called 
		Then: output is: 
["test", "test", "test", "test", "test"]
		Passed: true
		Expected Value:
["test", "test", "test", "test", "test"]
		Given Value:
["test", "test", "test", "test", "test"]


		Scenario:empty array
		Given: testExhibitManagement is []
		When: artifactsToArray called 
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ExhibitManagement sortExhibitArray

		Scenario:normal use
		Given: testExhibitManagement is [ID: 96	Name: test5, ID: 97	Name: test4, ID: 98	Name: test3, ID: 99	Name: test2, ID: 100	Name: test1]
		When: sortExhibitArray called 
		Then: output of getExhibitArray is: 
[{ID: 100	Name: test1}, {ID: 99	Name: test2}, {ID: 98	Name: test3}, {ID: 97	Name: test4}, {ID: 96	Name: test5}]
		Passed: true
		Expected Value:
[{ID: 100	Name: test1}, {ID: 99	Name: test2}, {ID: 98	Name: test3}, {ID: 97	Name: test4}, {ID: 96	Name: test5}]
		Given Value:
[{ID: 100	Name: test1}, {ID: 99	Name: test2}, {ID: 98	Name: test3}, {ID: 97	Name: test4}, {ID: 96	Name: test5}]


		Scenario:normal use, empty array
		Given: testExhibitManagement is []
		When: sortExhibitArray called 
		Then: output of getExhibitArray is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ExhibitManagement searchExhibits

		Scenario:normal use, criteria 1, search id
		Given: testExhibitManagement is [ID: 101	Name: test5, ID: 102	Name: test4, ID: 103	Name: test3, ID: 104	Name: test2, ID: 105	Name: test1]
		When: searchExhibits called with 1
		And: 105
		Then: output of getExhibitArray is: 
[{ID: 105	Name: test1}]
		Passed: true
		Expected Value:
[{ID: 105	Name: test1}]
		Given Value:
[{ID: 105	Name: test1}]


		Scenario:normal use, criteria 2, search name
		Given: testExhibitManagement is [ID: 106	Name: test5, ID: 107	Name: test4, ID: 108	Name: test3, ID: 109	Name: test2, ID: 110	Name: test1]
		When: searchExhibits called with 2
		And: 5
		Then: output of getExhibitArray is: 
[{ID: 106	Name: test5}]
		Passed: true
		Expected Value:
[{ID: 106	Name: test5}]
		Given Value:
[{ID: 106	Name: test5}]


		Scenario:normal use, criteria 5, no search
		Given: testExhibitManagement is [ID: 111	Name: test5, ID: 112	Name: test4, ID: 113	Name: test3, ID: 114	Name: test2, ID: 115	Name: test1]
		When: searchExhibits called with 5
		And: 1
		Then: output of getExhibitArray is: 
[{ID: 111	Name: test5}, {ID: 112	Name: test4}, {ID: 113	Name: test3}, {ID: 114	Name: test2}, {ID: 115	Name: test1}]
		Passed: true
		Expected Value:
[{ID: 111	Name: test5}, {ID: 112	Name: test4}, {ID: 113	Name: test3}, {ID: 114	Name: test2}, {ID: 115	Name: test1}]
		Given Value:
[{ID: 111	Name: test5}, {ID: 112	Name: test4}, {ID: 113	Name: test3}, {ID: 114	Name: test2}, {ID: 115	Name: test1}]


		Scenario:normal use, criteria 0,  no search
		Given: testExhibitManagement is [ID: 116	Name: test5, ID: 117	Name: test4, ID: 118	Name: test3, ID: 119	Name: test2, ID: 120	Name: test1]
		When: searchExhibits called with 0
		And: 1
		Then: output of getExhibitArray is: 
[{ID: 116	Name: test5}, {ID: 117	Name: test4}, {ID: 118	Name: test3}, {ID: 119	Name: test2}, {ID: 120	Name: test1}]
		Passed: true
		Expected Value:
[{ID: 116	Name: test5}, {ID: 117	Name: test4}, {ID: 118	Name: test3}, {ID: 119	Name: test2}, {ID: 120	Name: test1}]
		Given Value:
[{ID: 116	Name: test5}, {ID: 117	Name: test4}, {ID: 118	Name: test3}, {ID: 119	Name: test2}, {ID: 120	Name: test1}]


		Scenario:normal use, criteria -1,  no search
		Given: testExhibitManagement is [ID: 121	Name: test5, ID: 122	Name: test4, ID: 123	Name: test3, ID: 124	Name: test2, ID: 125	Name: test1]
		When: searchExhibits called with -1
		And: 1
		Then: output of getExhibitArray is: 
[{ID: 121	Name: test5}, {ID: 122	Name: test4}, {ID: 123	Name: test3}, {ID: 124	Name: test2}, {ID: 125	Name: test1}]
		Passed: true
		Expected Value:
[{ID: 121	Name: test5}, {ID: 122	Name: test4}, {ID: 123	Name: test3}, {ID: 124	Name: test2}, {ID: 125	Name: test1}]
		Given Value:
[{ID: 121	Name: test5}, {ID: 122	Name: test4}, {ID: 123	Name: test3}, {ID: 124	Name: test2}, {ID: 125	Name: test1}]

	Feature Passed: true

	Feature: ExhibitMenu getExhibitMenu

		Scenario:normal use
		Given: testExhibitManagement is [ID: 126	Name: test5, ID: 127	Name: test4, ID: 128	Name: test3, ID: 129	Name: test2, ID: 130	Name: test1]
		When: exhibitsMenu called
		Then: display of getUserChoice is: 
Exhibits
++++++++
1. test1
2. test2
3. test3
4. test4
5. test5
6. Search
7. Clear
8. Quit

Enter Selection:
		Passed: true
		Expected Value:
Exhibits
++++++++
1. test1
2. test2
3. test3
4. test4
5. test5
6. Search
7. Clear
8. Quit

Enter Selection:
		Given Value:
Exhibits
++++++++
1. test1
2. test2
3. test3
4. test4
5. test5
6. Search
7. Clear
8. Quit

Enter Selection: 


		Scenario:empty artifactManagement use
		Given: testExhibitManagement is []
		When: exhibitsMenu called
		Then: display of getUserChoice is: 
Exhibits
++++++++
1. Search
2. Clear
3. Quit

Enter Selection:
		Passed: true
		Expected Value:
Exhibits
++++++++
1. Search
2. Clear
3. Quit

Enter Selection:
		Given Value:
Exhibits
++++++++
1. Search
2. Clear
3. Quit

Enter Selection: 

	Feature Passed: true

	Feature: ExhibitManagement getExhibitString

		Scenario:normal use
		Given: testExhibitManagement is [ID: 131	Name: test, ID: 132	Name: test, ID: 133	Name: test, ID: 134	Name: test, ID: 135	Name: test, ID: 136	Name: test, ID: 137	Name: test, ID: 138	Name: test, ID: 139	Name: test, ID: 140	Name: test]
		When: getExhibitString called with 9
		AND: [ID: 0,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 1,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 2,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 3,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 4,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 5,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 6,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 7,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 8,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 9,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		Then: output is: 
ID: 140Name: testArtifacts for the ExhibittestRoute:Steps                                      Signs1. test                                    aTotal Engagement Time: 4 minutes
		Passed: true
		Expected Value:
ID: 140Name: testArtifacts for the ExhibittestRoute:Steps                                      Signs1. test                                    aTotal Engagement Time: 4 minutes
		Given Value:
ID: 140Name: testArtifacts for the ExhibittestRoute:Steps                                      Signs1. test                                    aTotal Engagement Time: 4 minutes


		Scenario:choice exceeds created artifacts
		Given: testExhibitManagement is [ID: 141	Name: test, ID: 142	Name: test, ID: 143	Name: test, ID: 144	Name: test, ID: 145	Name: test, ID: 146	Name: test, ID: 147	Name: test, ID: 148	Name: test, ID: 149	Name: test, ID: 150	Name: test]
		When: getExhibitString called with 11
		AND: [ID: 10,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 11,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 12,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 13,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 14,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 15,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 16,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 17,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 18,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 19,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		Then: output is: 
exhibit choice out of range
		Passed: true
		Expected Value:
exhibit choice out of range
		Given Value:
exhibit choice out of range


		Scenario:choice below created artifacts
		Given: testExhibitManagement is [ID: 151	Name: test, ID: 152	Name: test, ID: 153	Name: test, ID: 154	Name: test, ID: 155	Name: test, ID: 156	Name: test, ID: 157	Name: test, ID: 158	Name: test, ID: 159	Name: test, ID: 160	Name: test]
		When: getExhibitString called with -10
		AND: [ID: 20,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 21,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 22,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 23,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 24,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 25,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 26,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 27,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 28,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 29,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		Then: output is: 
exhibit choice out of range
		Passed: true
		Expected Value:
exhibit choice out of range
		Given Value:
exhibit choice out of range


		Scenario:artifactIDs not in artifactManagement
		Given: testExhibitManagement is [ID: 161	Name: test, ID: 162	Name: test, ID: 163	Name: test, ID: 164	Name: test, ID: 165	Name: test, ID: 166	Name: test, ID: 167	Name: test, ID: 168	Name: test, ID: 169	Name: test, ID: 170	Name: test]
		When: getExhibitString called with 9
		AND: [ID: 30,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 31,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 32,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 33,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 34,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 35,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 36,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 37,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 38,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 39,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		Then: output is: 
ID: 170Name: testArtifacts for the ExhibitRoute:Steps                                      SignsTotal Engagement Time: 0 minutes
		Passed: true
		Expected Value:
ID: 170Name: testArtifacts for the ExhibitRoute:Steps                                      SignsTotal Engagement Time: 0 minutes
		Given Value:
ID: 170Name: testArtifacts for the ExhibitRoute:Steps                                      SignsTotal Engagement Time: 0 minutes


		Scenario:artifactManagement is null
		Given: testExhibitManagement is [ID: 171	Name: test, ID: 172	Name: test, ID: 173	Name: test, ID: 174	Name: test, ID: 175	Name: test, ID: 176	Name: test, ID: 177	Name: test, ID: 178	Name: test, ID: 179	Name: test, ID: 180	Name: test]
		When: getExhibitString called with 9
		AND: null
		Then: output is: 
ID: 180Name: testArtifacts for the ExhibitRoute:Steps                                      SignsTotal Engagement Time: 0 minutes
		Passed: true
		Expected Value:
ID: 180Name: testArtifacts for the ExhibitRoute:Steps                                      SignsTotal Engagement Time: 0 minutes
		Given Value:
ID: 180Name: testArtifacts for the ExhibitRoute:Steps                                      SignsTotal Engagement Time: 0 minutes

	Feature Passed: true

	Feature: ExhibitManagement  removeExhibit

Scenario:normal use
Given: testExhibitManagement is [ID: 181	Name: test5, ID: 182	Name: test4, ID: 183	Name: test3, ID: 184	Name: test2]
When: removeExhibit called with 185
Then: output of getExhibits is: 
[ID: 181	Name: test5, ID: 182	Name: test4, ID: 183	Name: test3, ID: 184	Name: test2]
Passed: true
Expected Value:
[ID: 181	Name: test5, ID: 182	Name: test4, ID: 183	Name: test3, ID: 184	Name: test2]
Given Value:
[ID: 181	Name: test5, ID: 182	Name: test4, ID: 183	Name: test3, ID: 184	Name: test2]


Scenario:out of range choice
Given: testExhibitManagement is [ID: 186	Name: test5, ID: 187	Name: test4, ID: 188	Name: test3, ID: 189	Name: test2, ID: 190	Name: test1]
When: removeExhibit called with -1
Then: output of getExhibits is: 
[ID: 186	Name: test5, ID: 187	Name: test4, ID: 188	Name: test3, ID: 189	Name: test2, ID: 190	Name: test1]
Passed: true
Expected Value:
[ID: 186	Name: test5, ID: 187	Name: test4, ID: 188	Name: test3, ID: 189	Name: test2, ID: 190	Name: test1]
Given Value:
[ID: 186	Name: test5, ID: 187	Name: test4, ID: 188	Name: test3, ID: 189	Name: test2, ID: 190	Name: test1]


Scenario:out of range choice
Given: testExhibitManagement is [ID: 191	Name: test5, ID: 192	Name: test4, ID: 193	Name: test3, ID: 194	Name: test2, ID: 195	Name: test1]
When: removeExhibit called with 5
Then: output of getExhibits is: 
[ID: 191	Name: test5, ID: 192	Name: test4, ID: 193	Name: test3, ID: 194	Name: test2, ID: 195	Name: test1]
Passed: true
Expected Value:
[ID: 191	Name: test5, ID: 192	Name: test4, ID: 193	Name: test3, ID: 194	Name: test2, ID: 195	Name: test1]
Given Value:
[ID: 191	Name: test5, ID: 192	Name: test4, ID: 193	Name: test3, ID: 194	Name: test2, ID: 195	Name: test1]


Scenario:empty exhibits
Given: testExhibitManagement is []
When: removeExhibit called with 2
Then: output of getExhibits is: 
[]
Passed: true
Expected Value:
[]
Given Value:
[]

	Feature Passed: true

	Feature: ExhibitManagement getExhibitArtifactNames

		Scenario:normal use
		Given: testExhibitManagement is [ID: 196	Name: test, ID: 197	Name: test, ID: 198	Name: test, ID: 199	Name: test, ID: 200	Name: test, ID: 201	Name: test, ID: 202	Name: test, ID: 203	Name: test, ID: 204	Name: test, ID: 205	Name: test]
		When: getExhibitArtifactNames called with 0
		And: [ID: 40,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 41,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 42,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 43,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 44,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 45,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 46,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 47,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 48,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 49,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		Then: output is: 
["test"]
		Passed: true
		Expected Value:
["test"]
		Given Value:
["test"]


		Scenario:normal use
		Given: testExhibitManagement is [ID: 206	Name: test, ID: 207	Name: test, ID: 208	Name: test, ID: 209	Name: test, ID: 210	Name: test, ID: 211	Name: test, ID: 212	Name: test, ID: 213	Name: test, ID: 214	Name: test, ID: 215	Name: test]
		When: getExhibitArtifactNames called with 0
		And: [ID: 50,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 51,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 52,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 53,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 54,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 55,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 56,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 57,	Name: test,	Type: artifact,	Engagement Time: 4 minutes, ID: 58,	Name: test,	Type: artifact,Engagement Time: 4 minutes, ID: 59,	Name: test,	Type: artifact,	Engagement Time: 4 minutes]
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:normal use
		Given: testExhibitManagement is [ID: 216	Name: test, ID: 217	Name: test, ID: 218	Name: test, ID: 219	Name: test, ID: 220	Name: test, ID: 221	Name: test, ID: 222	Name: test, ID: 223	Name: test, ID: 224	Name: test, ID: 225	Name: test]
		When: getExhibitArtifactNames called with 0
		And: null
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:normal use
		Given: testExhibitManagement is [ID: 226	Name: test, ID: 227	Name: test, ID: 228	Name: test, ID: 229	Name: test, ID: 230	Name: test, ID: 231	Name: test, ID: 232	Name: test, ID: 233	Name: test, ID: 234	Name: test, ID: 235	Name: test]
		When: getExhibitArtifactNames called with -1
		And: null
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:normal use
		Given: testExhibitManagement is [ID: 236	Name: test, ID: 237	Name: test, ID: 238	Name: test, ID: 239	Name: test, ID: 240	Name: test, ID: 241	Name: test, ID: 242	Name: test, ID: 243	Name: test, ID: 244	Name: test, ID: 245	Name: test]
		When: getExhibitArtifactNames called with 10
		And: null
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ExhibitMenu getExhibitArtifactMenu
	Feature Passed: true

	Feature: ExhibitMenu getArtifactNumber

		Scenario:normal use
		Given: testExhibitManagement is [ID: 296	Name: test, ID: 297	Name: test, ID: 298	Name: test, ID: 299	Name: test, ID: 300	Name: test, ID: 301	Name: test, ID: 302	Name: test, ID: 303	Name: test, ID: 304	Name: test, ID: 305	Name: test]
		When: getArtifactNumber called with 0
		Then: output is: 
4
		Passed: true
		Expected Value:
4
		Given Value:
4


		Scenario:choice outside range
		Given: testExhibitManagement is [ID: 306	Name: test, ID: 307	Name: test, ID: 308	Name: test, ID: 309	Name: test, ID: 310	Name: test, ID: 311	Name: test, ID: 312	Name: test, ID: 313	Name: test, ID: 314	Name: test, ID: 315	Name: test]
		When: getArtifactNumber called with -1
		Then: output is: 
-1
		Passed: true
		Expected Value:
-1
		Given Value:
-1


		Scenario:choice outside range
		Given: testExhibitManagement is [ID: 316	Name: test, ID: 317	Name: test, ID: 318	Name: test, ID: 319	Name: test, ID: 320	Name: test, ID: 321	Name: test, ID: 322	Name: test, ID: 323	Name: test, ID: 324	Name: test, ID: 325	Name: test]
		When: getArtifactNumber called with 10
		Then: output is: 
-1
		Passed: true
		Expected Value:
-1
		Given Value:
-1

	Feature Passed: true

	Feature: ExhibitMenu getExhibitRoute

		Scenario:normal use
		Given: testExhibitManagement is [ID: 326	Name: test, ID: 327	Name: test, ID: 328	Name: test, ID: 329	Name: test, ID: 330	Name: test, ID: 331	Name: test, ID: 332	Name: test, ID: 333	Name: test, ID: 334	Name: test, ID: 335	Name: test]
		When: getExhibitRoute called with 0
		Then: output is: 
[a, b, c, d]
		Passed: true
		Expected Value:
[a, b, c, d]
		Given Value:
[a, b, c, d]


		Scenario:choice outside range
		Given: testExhibitManagement is [ID: 336	Name: test, ID: 337	Name: test, ID: 338	Name: test, ID: 339	Name: test, ID: 340	Name: test, ID: 341	Name: test, ID: 342	Name: test, ID: 343	Name: test, ID: 344	Name: test, ID: 345	Name: test]
		When: getExhibitRoute called with -1
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:choice outside range
		Given: testExhibitManagement is [ID: 346	Name: test, ID: 347	Name: test, ID: 348	Name: test, ID: 349	Name: test, ID: 350	Name: test, ID: 351	Name: test, ID: 352	Name: test, ID: 353	Name: test, ID: 354	Name: test, ID: 355	Name: test]
		When: getExhibitRoute called with 10
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ExhibitMenu getExhibitArtifacts

		Scenario:normal use
		Given: testExhibitManagement is [ID: 356	Name: test, ID: 357	Name: test, ID: 358	Name: test, ID: 359	Name: test, ID: 360	Name: test, ID: 361	Name: test, ID: 362	Name: test, ID: 363	Name: test, ID: 364	Name: test, ID: 365	Name: test]
		When: getExhibitArtifacts called with 0
		Then: output is: 
[80]
		Passed: true
		Expected Value:
[80]
		Given Value:
[80]


		Scenario:choice outside range
		Given: testExhibitManagement is [ID: 366	Name: test, ID: 367	Name: test, ID: 368	Name: test, ID: 369	Name: test, ID: 370	Name: test, ID: 371	Name: test, ID: 372	Name: test, ID: 373	Name: test, ID: 374	Name: test, ID: 375	Name: test]
		When: getExhibitArtifacts called with -1
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:choice outside range
		Given: testExhibitManagement is [ID: 376	Name: test, ID: 377	Name: test, ID: 378	Name: test, ID: 379	Name: test, ID: 380	Name: test, ID: 381	Name: test, ID: 382	Name: test, ID: 383	Name: test, ID: 384	Name: test, ID: 385	Name: test]
		When: getExhibitArtifacts called with 10
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ExhibitMenu getExhibitArtifactsByID

		Scenario:normal use
		Given: testExhibitManagement is [ID: 386	Name: test, ID: 387	Name: test, ID: 388	Name: test, ID: 389	Name: test, ID: 390	Name: test, ID: 391	Name: test, ID: 392	Name: test, ID: 393	Name: test, ID: 394	Name: test, ID: 395	Name: test]
		When: getExhibitArtifactsByID called with 386
		Then: output is: 
[90]
		Passed: true
		Expected Value:
[90]
		Given Value:
[90]


		Scenario:choice outside range
		Given: testExhibitManagement is [ID: 396	Name: test, ID: 397	Name: test, ID: 398	Name: test, ID: 399	Name: test, ID: 400	Name: test, ID: 401	Name: test, ID: 402	Name: test, ID: 403	Name: test, ID: 404	Name: test, ID: 405	Name: test]
		When: getExhibitArtifactsByID called with 406
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]

	Feature Passed: true

	Feature: ArtifactManagement updateExhibit

		Scenario:normal use
		Given: testExhibitManagement is [ID: 406	Name: update, ID: 407	Name: test, ID: 408	Name: test, ID: 409	Name: test, ID: 410	Name: test, ID: 411	Name: test, ID: 412	Name: test, ID: 413	Name: test, ID: 414	Name: test, ID: 415	Name: test]
		When: updateExhibit called with 0
		And: update
		And: [1]
		And: [a]
		Then: output is: 
true
		Passed: true
		Expected Value:
true
		Given Value:
true


		Scenario: Route is longer
		Given: testExhibitManagement is [ID: 416	Name: test, ID: 417	Name: test, ID: 418	Name: test, ID: 419	Name: test, ID: 420	Name: test, ID: 421	Name: test, ID: 422	Name: test, ID: 423	Name: test, ID: 424	Name: test, ID: 425	Name: test]
		When: updateExhibit called with 0
		And: update
		And: [1]
		And: [a, b]
		Then: output is: 
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario: artifacts is longer
		Given: testExhibitManagement is [ID: 426	Name: test, ID: 427	Name: test, ID: 428	Name: test, ID: 429	Name: test, ID: 430	Name: test, ID: 431	Name: test, ID: 432	Name: test, ID: 433	Name: test, ID: 434	Name: test, ID: 435	Name: test]
		When: updateExhibit called with 0
		And: update
		And: [1, 2]
		And: [a]
		Then: output is: 
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario: both are empty
		Given: testExhibitManagement is [ID: 436	Name: update, ID: 437	Name: test, ID: 438	Name: test, ID: 439	Name: test, ID: 440	Name: test, ID: 441	Name: test, ID: 442	Name: test, ID: 443	Name: test, ID: 444	Name: test, ID: 445	Name: test]
		When: updateExhibit called with 0
		And: update
		And: []
		And: []
		Then: output is: 
true
		Passed: true
		Expected Value:
true
		Given Value:
true


		Scenario: both are null
		Given: testExhibitManagement is [ID: 446	Name: test, ID: 447	Name: test, ID: 448	Name: test, ID: 449	Name: test, ID: 450	Name: test, ID: 451	Name: test, ID: 452	Name: test, ID: 453	Name: test, ID: 454	Name: test, ID: 455	Name: test]
		When: updateExhibit called with 0
		And: update
		And: null
		And: null
		Then: output is: 
false
		Passed: true
		Expected Value:
false
		Given Value:
false

	Feature Passed: true

	Feature: ArtifactManagement updateExhibitByID

		Scenario:normal use
		Given: testExhibitManagement is [ID: 456	Name: test, ID: 457	Name: test, ID: 458	Name: test, ID: 459	Name: test, ID: 460	Name: test, ID: 461	Name: test, ID: 462	Name: test, ID: 463	Name: test, ID: 464	Name: test, ID: 465	Name: update]
		When: updateExhibitByID called with update
		And: [1]
		And: [a]
		And: 465
		Then: output is: 
true
		Passed: true
		Expected Value:
true
		Given Value:
true


		Scenario: Route is longer
		Given: testExhibitManagement is [ID: 466	Name: test, ID: 467	Name: test, ID: 468	Name: test, ID: 469	Name: test, ID: 470	Name: test, ID: 471	Name: test, ID: 472	Name: test, ID: 473	Name: test, ID: 474	Name: test, ID: 475	Name: test]
		When: updateExhibitByID called with update
		And: [1]
		And: [a, b]
		And: 475
		Then: output is: 
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario: artifacts is longer
		Given: testExhibitManagement is [ID: 476	Name: test, ID: 477	Name: test, ID: 478	Name: test, ID: 479	Name: test, ID: 480	Name: test, ID: 481	Name: test, ID: 482	Name: test, ID: 483	Name: test, ID: 484	Name: test, ID: 485	Name: test]
		When: updateExhibitByID called with update
		And: [1, 2]
		And: [a]
		And: 485
		Then: output is: 
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario: both are empty
		Given: testExhibitManagement is [ID: 486	Name: test, ID: 487	Name: test, ID: 488	Name: test, ID: 489	Name: test, ID: 490	Name: test, ID: 491	Name: test, ID: 492	Name: test, ID: 493	Name: test, ID: 494	Name: test, ID: 495	Name: update]
		When: updateExhibitByID called with update
		And: []
		And: []
		And: 495
		Then: output is: 
true
		Passed: true
		Expected Value:
true
		Given Value:
true


		Scenario: both are null
		Given: testExhibitManagement is [ID: 496	Name: test, ID: 497	Name: test, ID: 498	Name: test, ID: 499	Name: test, ID: 500	Name: test, ID: 501	Name: test, ID: 502	Name: test, ID: 503	Name: test, ID: 504	Name: test, ID: 505	Name: test]
		When: updateExhibitByID called with update
		And: null
		And: null
		And: 505
		Then: output is: 
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario:invalid ID
		Given: testExhibitManagement is [ID: 506	Name: test, ID: 507	Name: test, ID: 508	Name: test, ID: 509	Name: test, ID: 510	Name: test, ID: 511	Name: test, ID: 512	Name: test, ID: 513	Name: test, ID: 514	Name: test, ID: 515	Name: test]
		When: updateExhibitByID called with update
		And: null
		And: null
		And: 516
		Then: output is: 
false
		Passed: true
		Expected Value:
false
		Given Value:
false

	Feature Passed: true

	Feature: ExhibitManagement removeArtifactsWithID

		Scenario:normal use
		Given: testExhibitManagement is [ID: 516	Name: test, ID: 517	Name: test, ID: 518	Name: test, ID: 519	Name: test, ID: 520	Name: test, ID: 521	Name: test, ID: 522	Name: test, ID: 523	Name: test, ID: 524	Name: test, ID: 525	Name: test]
		When: removeArtifactsWithID called with 109
		Then: output of getExhibitArtifacts with: 
9
		is: []
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:negative id
		Given: testExhibitManagement is [ID: 526	Name: test, ID: 527	Name: test, ID: 528	Name: test, ID: 529	Name: test, ID: 530	Name: test, ID: 531	Name: test, ID: 532	Name: test, ID: 533	Name: test, ID: 534	Name: test, ID: 535	Name: test]
		When: removeArtifactsWithID called with -1
		Then: output of getExhibitArtifacts with: 
9
		is: [119]
		Passed: true
		Expected Value:
[119]
		Given Value:
[119]

	Feature Passed: true

	Feature: ExhibitManagement removeArtifactsWithID

		Scenario:normal use, 1D
		Given: testExhibitManagement is [ID: 536	Name: test, ID: 537	Name: test, ID: 538	Name: test, ID: 539	Name: test, ID: 540	Name: test, ID: 541	Name: test, ID: 542	Name: test, ID: 543	Name: test, ID: 544	Name: test, ID: 545	Name: test]
		When: getExhibitionExhibtNames called with [536, 537, 538]
		Then: output is: 
["test", "test", "test"]
		Passed: true
		Expected Value:
["test", "test", "test"]
		Given Value:
["test", "test", "test"]


		Scenario:normal use, 2D
		Given: testExhibitManagement is [ID: 546	Name: test, ID: 547	Name: test, ID: 548	Name: test, ID: 549	Name: test, ID: 550	Name: test, ID: 551	Name: test, ID: 552	Name: test, ID: 553	Name: test, ID: 554	Name: test, ID: 555	Name: test]
		When: getExhibitionExhibtNames called with [ [546, 547, 548], [549, 550, 551], [552, 553, 554]]
		Then: output is: 
[[test, test, test], [test, test, test], [test, test, test]]
		Passed: true
		Expected Value:
[[test, test, test], [test, test, test], [test, test, test]]
		Given Value:
[[test, test, test], [test, test, test], [test, test, test]]


		Scenario:exhibitIDs is null, 1D
		Given: testExhibitManagement is [ID: 556	Name: test, ID: 557	Name: test, ID: 558	Name: test, ID: 559	Name: test, ID: 560	Name: test, ID: 561	Name: test, ID: 562	Name: test, ID: 563	Name: test, ID: 564	Name: test, ID: 565	Name: test]
		When: getExhibitionExhibtNames called with null
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:exhibitIDs is null, 2D
		Given: testExhibitManagement is [ID: 566	Name: test, ID: 567	Name: test, ID: 568	Name: test, ID: 569	Name: test, ID: 570	Name: test, ID: 571	Name: test, ID: 572	Name: test, ID: 573	Name: test, ID: 574	Name: test, ID: 575	Name: test]
		When: getExhibitionExhibtNames called with null
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:exhibitIDs contains null, 2D
		Given: testExhibitManagement is [ID: 576	Name: test, ID: 577	Name: test, ID: 578	Name: test, ID: 579	Name: test, ID: 580	Name: test, ID: 581	Name: test, ID: 582	Name: test, ID: 583	Name: test, ID: 584	Name: test, ID: 585	Name: test]
		When: getExhibitionExhibtNames called with [ null, null, null]
		Then: output is: 
[]
		Passed: true
		Expected Value:
[]
		Given Value:
[]


		Scenario:exhibitIDs contains null, 2D
		Given: testExhibitManagement is [ID: 586	Name: test, ID: 587	Name: test, ID: 588	Name: test, ID: 589	Name: test, ID: 590	Name: test, ID: 591	Name: test, ID: 592	Name: test, ID: 593	Name: test, ID: 594	Name: test, ID: 595	Name: test]
		When: getExhibitionExhibtNames called with [ null, [586, 587, 588], [590, 591, 592]]
		Then: output is: 
[null, [test, test, test], [test, test, test]]
		Passed: true
		Expected Value:
[null, [test, test, test], [test, test, test]]
		Given Value:
[null, [test, test, test], [test, test, test]]


		Scenario:normal use, 1D
		Given: testExhibitManagement is [ID: 596	Name: test, ID: 597	Name: test, ID: 598	Name: test, ID: 599	Name: test, ID: 600	Name: test, ID: 601	Name: test, ID: 602	Name: test, ID: 603	Name: test, ID: 604	Name: test, ID: 605	Name: test]
		When: getExhibitionExhibtNames called with [1, 2, 3]
		Then: output is: 
["Exhibit not Found", "Exhibit not Found", "Exhibit not Found"]
		Passed: true
		Expected Value:
["Exhibit not Found", "Exhibit not Found", "Exhibit not Found"]
		Given Value:
["Exhibit not Found", "Exhibit not Found", "Exhibit not Found"]


		Scenario:normal use, 2D
		Given: testExhibitManagement is [ID: 606	Name: test, ID: 607	Name: test, ID: 608	Name: test, ID: 609	Name: test, ID: 610	Name: test, ID: 611	Name: test, ID: 612	Name: test, ID: 613	Name: test, ID: 614	Name: test, ID: 615	Name: test]
		When: getExhibitionExhibtNames called with [ [1, 2, 3], [1, 2, 3], [1, 2, 3]]
		Then: output is: 
[[Exhibit not Found, Exhibit not Found, Exhibit not Found], [Exhibit not Found, Exhibit not Found, Exhibit not Found], [Exhibit not Found, Exhibit not Found, Exhibit not Found]]
		Passed: true
		Expected Value:
[[Exhibit not Found, Exhibit not Found, Exhibit not Found], [Exhibit not Found, Exhibit not Found, Exhibit not Found], [Exhibit not Found, Exhibit not Found, Exhibit not Found]]
		Given Value:
[[Exhibit not Found, Exhibit not Found, Exhibit not Found], [Exhibit not Found, Exhibit not Found, Exhibit not Found], [Exhibit not Found, Exhibit not Found, Exhibit not Found]]

	Feature Passed: true

	Feature: ExhibitManagement findExhibit

		Scenario:normal use
		Given: testExhibitManagement is [ID: 616	Name: test, ID: 617	Name: test, ID: 618	Name: test, ID: 619	Name: test, ID: 620	Name: test]
		When: findExhibit called with 616
		Then: output is: 
ID: 616	Name: test
		Passed: true
		Expected Value:
616
		Given Value:
ID: 616	Name: test


		Scenario:normal use, exhibit not there
		Given: testExhibitManagement is [ID: 621	Name: test, ID: 622	Name: test, ID: 623	Name: test, ID: 624	Name: test, ID: 625	Name: test]
		When: findExhibit called with 619
		Then: output is: 
No mathcing id in list
Passed: true
		Expected Value:
No mathcing id in list
		Given Value:
No mathcing id in list

	Feature Passed: true

	Feature: ExhibitManagement getExhibitID

		Scenario:normal use
		Given: testExhibitManagement is [ID: 626	Name: test, ID: 627	Name: test, ID: 628	Name: test, ID: 629	Name: test, ID: 630	Name: test, ID: 631	Name: test, ID: 632	Name: test, ID: 633	Name: test, ID: 634	Name: test, ID: 635	Name: test]
		When: getExhibitID called with 0
		Then: output is: 
626
		Passed: true
		Expected Value:
626
		Given Value:
626


		Scenario:normal use, id out of range
		Given: testExhibitManagement is [ID: 636	Name: test, ID: 637	Name: test, ID: 638	Name: test, ID: 639	Name: test, ID: 640	Name: test, ID: 641	Name: test, ID: 642	Name: test, ID: 643	Name: test, ID: 644	Name: test, ID: 645	Name: test]
		When: getExhibitID called with 11
		Then: output is: 
-1
		Passed: true
		Expected Value:
-1
		Given Value:
-1

	Feature Passed: true

	Feature: ExhibitManagement anyDuplicateArtifacts

		Scenario:normal use, no duplicates
		Given: testExhibitManagement is [ID: 646	Name: test, ID: 647	Name: test, ID: 648	Name: test, ID: 649	Name: test, ID: 650	Name: test, ID: 651	Name: test, ID: 652	Name: test, ID: 653	Name: test, ID: 654	Name: test, ID: 655	Name: test]
		When: anyDuplicateArtifcats called with [655, 654, 653]
		Then: output is: 
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario:normal use, duplicates
		Given: testExhibitManagement is [ID: 656	Name: test, ID: 657	Name: test, ID: 658	Name: test, ID: 659	Name: test, ID: 660	Name: test, ID: 661	Name: test, ID: 662	Name: test, ID: 663	Name: test, ID: 664	Name: test, ID: 665	Name: test]
		When: anyDuplicateArtifcats called with [665, 664, 663]
		Then: output is: 
true
		Passed: true
		Expected Value:
true
		Given Value:
true


		Scenario:normal use, no duplicates
		Given: testExhibitManagement is [ID: 666	Name: test, ID: 667	Name: test, ID: 668	Name: test, ID: 669	Name: test, ID: 670	Name: test, ID: 671	Name: test, ID: 672	Name: test, ID: 673	Name: test, ID: 674	Name: test, ID: 675	Name: test]
		When: anyDuplicateArtifcats called with [675, 674, 673]
		Then: output is: 
false
		Passed: true
		Expected Value:
false
		Given Value:
false


		Scenario:normal use, duplicates
		Given: testExhibitManagement is [ID: 676	Name: test, ID: 677	Name: test, ID: 678	Name: test, ID: 679	Name: test, ID: 680	Name: test, ID: 681	Name: test, ID: 682	Name: test, ID: 683	Name: test, ID: 684	Name: test, ID: 685	Name: test]
		When: anyDuplicateArtifcats called with [685, 684, 683]
		Then: output is: 
true
		Passed: true
		Expected Value:
true
		Given Value:
true

	Feature Passed: true

All Features Passed: true